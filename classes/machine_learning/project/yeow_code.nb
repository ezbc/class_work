(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 7.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    294566,       6373]
NotebookOptionsPosition[    289970,       6236]
NotebookOutlinePosition[    290691,       6261]
CellTagsIndexPosition[    290648,       6258]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.625826298003951*^9, 3.6258262987738*^9}}],

Cell[BoxData[" "], "Input",
 CellChangeTimes->{3.6236629042575808`*^9}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.623660761826791*^9, 3.623660774018263*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"<<", "Graphics`MultipleListPlot`"}], "\n", 
   RowBox[{"<<", "\"\<Graphics`Graphics`\>\""}], "\n", 
   RowBox[{"<<", "NumericalMath`NMinimize`"}], "\[IndentingNewLine]", 
   "\n"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Get", "::", "noopen"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot open \[NoBreak]\\!\\(\\\"Graphics`MultipleListPlot`\
\\\"\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\
\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/noopen\\\", ButtonNote -> \
\\\"Get::noopen\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.623665693406746*^9, 3.625826389702661*^9, 
  3.6263496999804583`*^9, 3.626349742763055*^9}],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{3.6236656934081182`*^9, 3.625826389703568*^9, 
  3.626349699982058*^9, 3.626349742764563*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Get", "::", "noopen"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot open \[NoBreak]\\!\\(\\\"Graphics`Graphics`\\\"\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/noopen\\\", ButtonNote -> \
\\\"Get::noopen\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.623665693406746*^9, 3.625826389702661*^9, 
  3.6263496999804583`*^9, 3.626349742805099*^9}],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{3.6236656934081182`*^9, 3.625826389703568*^9, 
  3.626349699982058*^9, 3.6263497428058977`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Get", "::", "noopen"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot open \[NoBreak]\\!\\(\\\"NumericalMath`NMinimize`\\\
\"\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/noopen\\\", ButtonNote -> \
\\\"Get::noopen\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.623665693406746*^9, 3.625826389702661*^9, 
  3.6263496999804583`*^9, 3.62634974284752*^9}],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{3.6236656934081182`*^9, 3.625826389703568*^9, 
  3.626349699982058*^9, 3.6263497428483477`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"afun", "[", 
      RowBox[{"x_", ",", "am_", ",", " ", "lm_", ",", "ww_"}], "]"}], "=", 
     RowBox[{"am", "*", 
      RowBox[{"Exp", "[", 
       RowBox[{"-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"x", "-", "lm"}], ")"}], "/", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"ww", "*", 
              RowBox[{"2", "/", 
               RowBox[{"(", 
                RowBox[{"Log", "[", "2", "]"}], ")"}]}]}], ")"}], "^", 
            "0.5"}]}], ")"}], "^", "2"}]}], "]"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"afun2", "[", 
      RowBox[{"x_", ",", "am_", ",", " ", "lm_", ",", "ww_"}], "]"}], "=", 
     RowBox[{"am", "*", 
      RowBox[{"Exp", "[", 
       RowBox[{"-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"x", "-", "lm"}], ")"}], "/", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"ww", "*", 
              RowBox[{"2", "/", 
               RowBox[{"(", 
                RowBox[{"Log", "[", 
                 RowBox[{"10", ",", "2"}], "]"}], ")"}]}]}], ")"}], "^", 
            "0.5"}]}], ")"}], "^", "2"}]}], "]"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"synd4fun", "[", "xx_", "]"}], "=", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"afun", "[", 
         RowBox[{"xx", ",", "0.293", ",", "277", ",", "16.013"}], "]"}], "+", 
        RowBox[{"afun", "[", 
         RowBox[{"xx", ",", "0.03", ",", "289", ",", "7.771"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"xx", ",", "4"}], "}"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"syndata", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xx", ",", 
         RowBox[{
          RowBox[{"afun", "[", 
           RowBox[{"xx", ",", "0.293", ",", "277", ",", "16.013"}], "]"}], 
          "+", 
          RowBox[{"afun", "[", 
           RowBox[{"xx", ",", "0.03", ",", "289", ",", "7.771"}], "]"}]}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"xx", ",", "265", ",", "300", ",", "0.5"}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.623660825382709*^9, 3.623660827037683*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{
     "al", ",", "f1", ",", "f2", ",", "f3", ",", "x", ",", "dxk", ",", "xs", 
      ",", "gexp", ",", "in"}], "]"}], "\n", 
    RowBox[{
     RowBox[{"in", "[", 
      RowBox[{"x_", ",", "xs_", ",", "dxk_"}], "]"}], ":=", 
     RowBox[{
      FractionBox[
       RowBox[{"f3", " ", 
        RowBox[{"(", 
         RowBox[{"x", "-", "xs"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"x", "-", "xs", "-", "dxk"}], ")"}]}], 
       RowBox[{"2", " ", 
        SuperscriptBox["dxk", "2"], "1"}]], "+", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"f2", " ", 
         RowBox[{"(", 
          RowBox[{"x", "-", "xs"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"x", "-", "xs", "-", 
           RowBox[{"2", " ", "dxk"}]}], ")"}]}], 
        SuperscriptBox["dxk", "2"]]}], "+", 
      FractionBox[
       RowBox[{"f1", " ", 
        RowBox[{"(", 
         RowBox[{"x", "-", "xs", "-", "dxk"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"x", "-", "xs", "-", 
          RowBox[{"2", " ", "dxk"}]}], ")"}]}], 
       RowBox[{"2", " ", 
        SuperscriptBox["dxk", "2"]}]]}]}], "\n", 
    RowBox[{
     RowBox[{"gexp", "=", 
      RowBox[{"Simplify", "[", 
       RowBox[{
        SubsuperscriptBox["\[Integral]", "xs", 
         RowBox[{"xs", "+", 
          RowBox[{"al", " ", "dxk"}]}]], 
        RowBox[{
         RowBox[{"in", "[", 
          RowBox[{"x", ",", "xs", ",", "dxk"}], "]"}], 
         RowBox[{"\[DifferentialD]", "x"}]}]}], "]"}]}], ";"}], "\n", 
    RowBox[{
     RowBox[{"c1", "[", "al_", "]"}], "=", 
     RowBox[{"Coefficient", "[", 
      RowBox[{
       RowBox[{"Expand", "[", 
        FractionBox["gexp", "dxk"], "]"}], ",", "f1"}], "]"}]}], "\n", 
    RowBox[{
     RowBox[{"c2", "[", "al_", "]"}], "=", 
     RowBox[{"Coefficient", "[", 
      RowBox[{
       RowBox[{"Expand", "[", 
        FractionBox["gexp", "dxk"], "]"}], ",", "f2"}], "]"}]}], "\n", 
    RowBox[{
     RowBox[{"c3", "[", "al_", "]"}], "=", 
     RowBox[{"Coefficient", "[", 
      RowBox[{
       RowBox[{"Expand", "[", 
        FractionBox["gexp", "dxk"], "]"}], ",", "f3"}], "]"}]}], "\n", 
    RowBox[{"Clear", "[", "ad", "]"}], "\n", 
    RowBox[{
     RowBox[{
      RowBox[{"ad", "[", 
       RowBox[{"id_", ",", "jk_", ",", "xl__", ",", "xu__"}], "]"}], ":=", 
      RowBox[{"4", "/;", 
       RowBox[{
        RowBox[{"EvenQ", "[", "jk", "]"}], "&&", 
        RowBox[{
         RowBox[{
          RowBox[{
          "xknot", "\[LeftDoubleBracket]", "jk", "\[RightDoubleBracket]"}], 
          "-", 
          RowBox[{
          "xl", "\[LeftDoubleBracket]", "id", "\[RightDoubleBracket]"}]}], 
         "\[GreaterEqual]", 
         RowBox[{"0.9999", " ", "dxk"}]}], "&&", 
        RowBox[{
         RowBox[{
          RowBox[{
          "xu", "\[LeftDoubleBracket]", "id", "\[RightDoubleBracket]"}], "-", 
          RowBox[{
          "xknot", "\[LeftDoubleBracket]", "jk", "\[RightDoubleBracket]"}]}], 
         "\[GreaterEqual]", 
         RowBox[{"0.9999", " ", "dxk"}]}]}]}]}], ";"}], "\n", 
    RowBox[{
     RowBox[{
      RowBox[{"ad", "[", 
       RowBox[{"id_", ",", "jk_", ",", "xl__", ",", "xu__"}], "]"}], ":=", 
      RowBox[{"2", "/;", 
       RowBox[{
        RowBox[{"OddQ", "[", "jk", "]"}], "&&", 
        RowBox[{
         RowBox[{
          RowBox[{
          "xknot", "\[LeftDoubleBracket]", "jk", "\[RightDoubleBracket]"}], 
          "-", 
          RowBox[{
          "xl", "\[LeftDoubleBracket]", "id", "\[RightDoubleBracket]"}]}], 
         ">", 
         RowBox[{"2", " ", "dxk"}]}], "&&", 
        RowBox[{
         RowBox[{
          RowBox[{
          "xu", "\[LeftDoubleBracket]", "id", "\[RightDoubleBracket]"}], "-", 
          RowBox[{
          "xknot", "\[LeftDoubleBracket]", "jk", "\[RightDoubleBracket]"}]}], 
         ">", 
         RowBox[{"2", " ", "dxk"}]}]}]}]}], ";"}], "\n", 
    RowBox[{
     RowBox[{
      RowBox[{"ad", "[", 
       RowBox[{"id_", ",", "jk_", ",", "xl__", ",", "xu__"}], "]"}], ":=", 
      RowBox[{"0", "/;", 
       RowBox[{
        RowBox[{"EvenQ", "[", "jk", "]"}], "&&", 
        RowBox[{
         RowBox[{
          RowBox[{
          "xknot", "\[LeftDoubleBracket]", "jk", "\[RightDoubleBracket]"}], 
          "-", 
          RowBox[{
          "xu", "\[LeftDoubleBracket]", "id", "\[RightDoubleBracket]"}]}], 
         "\[GreaterEqual]", "dxk"}]}]}]}], ";"}], "\n", 
    RowBox[{
     RowBox[{
      RowBox[{"ad", "[", 
       RowBox[{"id_", ",", "jk_", ",", "xl__", ",", "xu__"}], "]"}], ":=", 
      RowBox[{"0", "/;", 
       RowBox[{
        RowBox[{"OddQ", "[", "jk", "]"}], "&&", 
        RowBox[{
         RowBox[{
          RowBox[{
          "xknot", "\[LeftDoubleBracket]", "jk", "\[RightDoubleBracket]"}], 
          "-", 
          RowBox[{
          "xu", "\[LeftDoubleBracket]", "id", "\[RightDoubleBracket]"}]}], 
         "\[GreaterEqual]", 
         RowBox[{"2", " ", "dxk"}]}]}]}]}], ";"}], "\n", 
    RowBox[{
     RowBox[{
      RowBox[{"ad", "[", 
       RowBox[{"id_", ",", "jk_", ",", "xl__", ",", "xu__"}], "]"}], ":=", 
      RowBox[{"0", "/;", 
       RowBox[{
        RowBox[{"EvenQ", "[", "jk", "]"}], "&&", 
        RowBox[{
         RowBox[{
          RowBox[{
          "xl", "\[LeftDoubleBracket]", "id", "\[RightDoubleBracket]"}], "-", 
          RowBox[{
          "xknot", "\[LeftDoubleBracket]", "jk", "\[RightDoubleBracket]"}]}], 
         "\[GreaterEqual]", "dxk"}]}]}]}], ";"}], "\n", 
    RowBox[{
     RowBox[{
      RowBox[{"ad", "[", 
       RowBox[{"id_", ",", "jk_", ",", "xl__", ",", "xu__"}], "]"}], ":=", 
      RowBox[{"0", "/;", 
       RowBox[{
        RowBox[{"OddQ", "[", "jk", "]"}], "&&", 
        RowBox[{
         RowBox[{
          RowBox[{
          "xl", "\[LeftDoubleBracket]", "id", "\[RightDoubleBracket]"}], "-", 
          RowBox[{
          "xknot", "\[LeftDoubleBracket]", "jk", "\[RightDoubleBracket]"}]}], 
         "\[GreaterEqual]", 
         RowBox[{"2", " ", "dxk"}]}]}]}]}], ";"}], "\n", 
    RowBox[{
     RowBox[{
      RowBox[{"ad", "[", 
       RowBox[{"id_", ",", "jk_", ",", "xl__", ",", "xu__"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"3", " ", 
        RowBox[{"c2", "[", 
         FractionBox[
          RowBox[{
           RowBox[{
           "xu", "\[LeftDoubleBracket]", "id", "\[RightDoubleBracket]"}], "-", 
           RowBox[{"xknot", "\[LeftDoubleBracket]", 
            RowBox[{"jk", "-", "1"}], "\[RightDoubleBracket]"}]}], "dxk"], 
         "]"}]}], "/;", 
       RowBox[{
        RowBox[{"EvenQ", "[", "jk", "]"}], "&&", 
        RowBox[{
         RowBox[{
          RowBox[{
          "xu", "\[LeftDoubleBracket]", "id", "\[RightDoubleBracket]"}], "-", 
          RowBox[{"xknot", "\[LeftDoubleBracket]", 
           RowBox[{"jk", "-", "1"}], "\[RightDoubleBracket]"}]}], ">", "0"}], 
        "&&", 
        RowBox[{
         RowBox[{
          RowBox[{"xknot", "\[LeftDoubleBracket]", 
           RowBox[{"jk", "+", "1"}], "\[RightDoubleBracket]"}], "-", 
          RowBox[{
          "xu", "\[LeftDoubleBracket]", "id", "\[RightDoubleBracket]"}]}], 
         "\[LessEqual]", 
         RowBox[{"2.000", " ", "dxk"}]}], "&&", 
        RowBox[{
         RowBox[{
          RowBox[{
          "xknot", "\[LeftDoubleBracket]", "jk", "\[RightDoubleBracket]"}], 
          "-", 
          RowBox[{
          "xl", "\[LeftDoubleBracket]", "id", "\[RightDoubleBracket]"}]}], 
         "\[GreaterEqual]", "dxk"}]}]}]}], ";"}], "\n", 
    RowBox[{
     RowBox[{
      RowBox[{"ad", "[", 
       RowBox[{"id_", ",", "jk_", ",", "xl__", ",", "xu__"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"1", "+", 
        RowBox[{"3", " ", 
         RowBox[{"c1", "[", 
          FractionBox[
           RowBox[{
            RowBox[{
            "xu", "\[LeftDoubleBracket]", "id", "\[RightDoubleBracket]"}], 
            "-", 
            RowBox[{
            "xknot", "\[LeftDoubleBracket]", "jk", 
             "\[RightDoubleBracket]"}]}], "dxk"], "]"}]}]}], "/;", 
       RowBox[{
        RowBox[{"OddQ", "[", "jk", "]"}], "&&", 
        RowBox[{
         RowBox[{
          RowBox[{
          "xu", "\[LeftDoubleBracket]", "id", "\[RightDoubleBracket]"}], "-", 
          RowBox[{
          "xknot", "\[LeftDoubleBracket]", "jk", "\[RightDoubleBracket]"}]}], 
         "\[GreaterEqual]", "0"}], "&&", 
        RowBox[{
         RowBox[{
          RowBox[{
          "xu", "\[LeftDoubleBracket]", "id", "\[RightDoubleBracket]"}], "-", 
          RowBox[{
          "xknot", "\[LeftDoubleBracket]", "jk", "\[RightDoubleBracket]"}]}], 
         "\[LessEqual]", 
         RowBox[{"2", " ", "dxk"}]}], "&&", 
        RowBox[{
         RowBox[{
          RowBox[{
          "xknot", "\[LeftDoubleBracket]", "jk", "\[RightDoubleBracket]"}], 
          "-", 
          RowBox[{
          "xl", "\[LeftDoubleBracket]", "id", "\[RightDoubleBracket]"}]}], 
         "\[GreaterEqual]", 
         RowBox[{"2", " ", "dxk"}]}]}]}]}], ";"}], "\n", 
    RowBox[{
     RowBox[{
      RowBox[{"ad", "[", 
       RowBox[{"id_", ",", "jk_", ",", "xl__", ",", "xu__"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"3", " ", 
        RowBox[{"c3", "[", 
         RowBox[{
          FractionBox[
           RowBox[{
            RowBox[{
            "xu", "\[LeftDoubleBracket]", "id", "\[RightDoubleBracket]"}], 
            "-", 
            RowBox[{"xknot", "\[LeftDoubleBracket]", 
             RowBox[{"jk", "-", "1"}], "\[RightDoubleBracket]"}]}], "dxk"], 
          "+", "1"}], "]"}]}], "/;", 
       RowBox[{
        RowBox[{"OddQ", "[", "jk", "]"}], "&&", 
        RowBox[{
         RowBox[{
          RowBox[{
          "xknot", "\[LeftDoubleBracket]", "jk", "\[RightDoubleBracket]"}], 
          "-", 
          RowBox[{
          "xu", "\[LeftDoubleBracket]", "id", "\[RightDoubleBracket]"}]}], 
         "\[GreaterEqual]", "0"}], "&&", 
        RowBox[{
         RowBox[{
          RowBox[{
          "xknot", "\[LeftDoubleBracket]", "jk", "\[RightDoubleBracket]"}], 
          "-", 
          RowBox[{
          "xu", "\[LeftDoubleBracket]", "id", "\[RightDoubleBracket]"}]}], 
         "\[LessEqual]", 
         RowBox[{"2", " ", "dxk"}]}], "&&", 
        RowBox[{
         RowBox[{
          RowBox[{
          "xknot", "\[LeftDoubleBracket]", "jk", "\[RightDoubleBracket]"}], 
          "-", 
          RowBox[{
          "xl", "\[LeftDoubleBracket]", "id", "\[RightDoubleBracket]"}]}], 
         "\[GreaterEqual]", 
         RowBox[{"2", " ", "dxk"}]}]}]}]}], ";"}], "\n", 
    RowBox[{
     RowBox[{
      RowBox[{"ad", "[", 
       RowBox[{"id_", ",", "jk_", ",", "xl__", ",", "xu__"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"4", "-", 
        RowBox[{"3", " ", 
         RowBox[{"c2", "[", 
          FractionBox[
           RowBox[{
            RowBox[{
            "xl", "\[LeftDoubleBracket]", "id", "\[RightDoubleBracket]"}], 
            "-", 
            RowBox[{"xknot", "\[LeftDoubleBracket]", 
             RowBox[{"jk", "-", "1"}], "\[RightDoubleBracket]"}]}], "dxk"], 
          "]"}]}]}], "/;", 
       RowBox[{
        RowBox[{"EvenQ", "[", "jk", "]"}], "&&", 
        RowBox[{
         RowBox[{
          RowBox[{
          "xl", "\[LeftDoubleBracket]", "id", "\[RightDoubleBracket]"}], "-", 
          RowBox[{"xknot", "\[LeftDoubleBracket]", 
           RowBox[{"jk", "-", "1"}], "\[RightDoubleBracket]"}]}], 
         "\[GreaterEqual]", "0"}], "&&", 
        RowBox[{
         RowBox[{
          RowBox[{
          "xl", "\[LeftDoubleBracket]", "id", "\[RightDoubleBracket]"}], "-", 
          RowBox[{"xknot", "\[LeftDoubleBracket]", 
           RowBox[{"jk", "+", "1"}], "\[RightDoubleBracket]"}]}], 
         "\[LessEqual]", "0"}], "&&", 
        RowBox[{
         RowBox[{
          RowBox[{
          "xu", "\[LeftDoubleBracket]", "id", "\[RightDoubleBracket]"}], "-", 
          RowBox[{
          "xknot", "\[LeftDoubleBracket]", "jk", "\[RightDoubleBracket]"}]}], 
         "\[GreaterEqual]", "dxk"}]}]}]}], ";"}], "\n", 
    RowBox[{
     RowBox[{
      RowBox[{"ad", "[", 
       RowBox[{"id_", ",", "jk_", ",", "xl__", ",", "xu__"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"3", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"c2", "[", 
           FractionBox[
            RowBox[{
             RowBox[{
             "xu", "\[LeftDoubleBracket]", "id", "\[RightDoubleBracket]"}], 
             "-", 
             RowBox[{"xknot", "\[LeftDoubleBracket]", 
              RowBox[{"jk", "-", "1"}], "\[RightDoubleBracket]"}]}], "dxk"], 
           "]"}], "-", 
          RowBox[{"c2", "[", 
           FractionBox[
            RowBox[{
             RowBox[{
             "xl", "\[LeftDoubleBracket]", "id", "\[RightDoubleBracket]"}], 
             "-", 
             RowBox[{"xknot", "\[LeftDoubleBracket]", 
              RowBox[{"jk", "-", "1"}], "\[RightDoubleBracket]"}]}], "dxk"], 
           "]"}]}], ")"}]}], "/;", 
       RowBox[{
        RowBox[{"EvenQ", "[", "jk", "]"}], "&&", 
        RowBox[{
         RowBox[{
          RowBox[{
          "xu", "\[LeftDoubleBracket]", "id", "\[RightDoubleBracket]"}], "-", 
          RowBox[{"xknot", "\[LeftDoubleBracket]", 
           RowBox[{"jk", "-", "1"}], "\[RightDoubleBracket]"}]}], 
         "\[LessEqual]", 
         RowBox[{"2.0001", " ", "dxk"}]}], "&&", 
        RowBox[{
         RowBox[{
          RowBox[{
          "xl", "\[LeftDoubleBracket]", "id", "\[RightDoubleBracket]"}], "-", 
          RowBox[{"xknot", "\[LeftDoubleBracket]", 
           RowBox[{"jk", "-", "1"}], "\[RightDoubleBracket]"}]}], 
         "\[LessEqual]", 
         RowBox[{"2.0001", " ", "dxk"}]}], "&&", 
        RowBox[{
         RowBox[{
          RowBox[{
          "xl", "\[LeftDoubleBracket]", "id", "\[RightDoubleBracket]"}], "-", 
          RowBox[{"xknot", "\[LeftDoubleBracket]", 
           RowBox[{"jk", "-", "1"}], "\[RightDoubleBracket]"}]}], 
         "\[GreaterEqual]", 
         RowBox[{"-", "0.0001"}]}]}]}]}], ";"}], "\n", 
    RowBox[{
     RowBox[{
      RowBox[{"ad", "[", 
       RowBox[{"id_", ",", "jk_", ",", "xl__", ",", "xu__"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"3", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"c1", "[", 
           FractionBox[
            RowBox[{
             RowBox[{
             "xu", "\[LeftDoubleBracket]", "id", "\[RightDoubleBracket]"}], 
             "-", 
             RowBox[{
             "xknot", "\[LeftDoubleBracket]", "jk", 
              "\[RightDoubleBracket]"}]}], "dxk"], "]"}], "-", 
          RowBox[{"c1", "[", 
           FractionBox[
            RowBox[{
             RowBox[{
             "xl", "\[LeftDoubleBracket]", "id", "\[RightDoubleBracket]"}], 
             "-", 
             RowBox[{
             "xknot", "\[LeftDoubleBracket]", "jk", 
              "\[RightDoubleBracket]"}]}], "dxk"], "]"}]}], ")"}]}], "/;", 
       RowBox[{
        RowBox[{"OddQ", "[", "jk", "]"}], "&&", 
        RowBox[{
         RowBox[{
          RowBox[{
          "xu", "\[LeftDoubleBracket]", "id", "\[RightDoubleBracket]"}], "-", 
          RowBox[{
          "xknot", "\[LeftDoubleBracket]", "jk", "\[RightDoubleBracket]"}]}], 
         "<", 
         RowBox[{"2", " ", "dxk"}]}], "&&", 
        RowBox[{
         RowBox[{
          RowBox[{
          "xu", "\[LeftDoubleBracket]", "id", "\[RightDoubleBracket]"}], "-", 
          RowBox[{
          "xknot", "\[LeftDoubleBracket]", "jk", "\[RightDoubleBracket]"}]}], 
         ">", "0"}], "&&", 
        RowBox[{
         RowBox[{
          RowBox[{
          "xl", "\[LeftDoubleBracket]", "id", "\[RightDoubleBracket]"}], "-", 
          RowBox[{
          "xknot", "\[LeftDoubleBracket]", "jk", "\[RightDoubleBracket]"}]}], 
         "\[GreaterEqual]", "0"}]}]}]}], ";"}], "\n", 
    RowBox[{
     RowBox[{
      RowBox[{"ad", "[", 
       RowBox[{"id_", ",", "jk_", ",", "xl__", ",", "xu__"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"3", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"c3", "[", 
           FractionBox[
            RowBox[{
             RowBox[{
             "xu", "\[LeftDoubleBracket]", "id", "\[RightDoubleBracket]"}], 
             "-", 
             RowBox[{"xknot", "\[LeftDoubleBracket]", 
              RowBox[{"jk", "-", "2"}], "\[RightDoubleBracket]"}]}], "dxk"], 
           "]"}], "-", 
          RowBox[{"c3", "[", 
           FractionBox[
            RowBox[{
             RowBox[{
             "xl", "\[LeftDoubleBracket]", "id", "\[RightDoubleBracket]"}], 
             "-", 
             RowBox[{"xknot", "\[LeftDoubleBracket]", 
              RowBox[{"jk", "-", "2"}], "\[RightDoubleBracket]"}]}], "dxk"], 
           "]"}]}], ")"}]}], "/;", 
       RowBox[{
        RowBox[{"OddQ", "[", "jk", "]"}], "&&", 
        RowBox[{
         RowBox[{
          RowBox[{
          "xknot", "\[LeftDoubleBracket]", "jk", "\[RightDoubleBracket]"}], 
          "-", 
          RowBox[{
          "xu", "\[LeftDoubleBracket]", "id", "\[RightDoubleBracket]"}]}], 
         "\[GreaterEqual]", 
         RowBox[{"-", "0.000001"}]}], "&&", 
        RowBox[{
         RowBox[{
          RowBox[{
          "xknot", "\[LeftDoubleBracket]", "jk", "\[RightDoubleBracket]"}], 
          "-", 
          RowBox[{
          "xu", "\[LeftDoubleBracket]", "id", "\[RightDoubleBracket]"}]}], 
         "<", 
         RowBox[{"2", " ", "dxk"}]}], "&&", 
        RowBox[{
         RowBox[{
          RowBox[{
          "xknot", "\[LeftDoubleBracket]", "jk", "\[RightDoubleBracket]"}], 
          "-", 
          RowBox[{
          "xl", "\[LeftDoubleBracket]", "id", "\[RightDoubleBracket]"}]}], 
         "\[LessEqual]", 
         RowBox[{"2", " ", "dxk"}]}]}]}]}], ";"}], "\n", 
    RowBox[{
     RowBox[{
      RowBox[{"ad", "[", 
       RowBox[{"id_", ",", "jk_", ",", "xl__", ",", "xu__"}], "]"}], ":=", 
      RowBox[{
       RowBox[{
        RowBox[{"3", " ", 
         RowBox[{"c1", "[", 
          FractionBox[
           RowBox[{
            RowBox[{
            "xu", "\[LeftDoubleBracket]", "id", "\[RightDoubleBracket]"}], 
            "-", 
            RowBox[{
            "xknot", "\[LeftDoubleBracket]", "jk", 
             "\[RightDoubleBracket]"}]}], "dxk"], "]"}]}], "+", "1", "-", 
        RowBox[{"3", " ", 
         RowBox[{"c3", "[", 
          FractionBox[
           RowBox[{
            RowBox[{
            "xl", "\[LeftDoubleBracket]", "id", "\[RightDoubleBracket]"}], 
            "-", 
            RowBox[{"xknot", "\[LeftDoubleBracket]", 
             RowBox[{"jk", "-", "2"}], "\[RightDoubleBracket]"}]}], "dxk"], 
          "]"}]}]}], "/;", 
       RowBox[{
        RowBox[{"OddQ", "[", "jk", "]"}], "&&", 
        RowBox[{
         RowBox[{
          RowBox[{
          "xu", "\[LeftDoubleBracket]", "id", "\[RightDoubleBracket]"}], "-", 
          RowBox[{
          "xknot", "\[LeftDoubleBracket]", "jk", "\[RightDoubleBracket]"}]}], 
         ">", "0"}], "&&", 
        RowBox[{
         RowBox[{
          RowBox[{
          "xu", "\[LeftDoubleBracket]", "id", "\[RightDoubleBracket]"}], "-", 
          RowBox[{
          "xknot", "\[LeftDoubleBracket]", "jk", "\[RightDoubleBracket]"}]}], 
         "<", 
         RowBox[{"2", " ", "dxk"}]}], "&&", 
        RowBox[{
         RowBox[{
          RowBox[{
          "xknot", "\[LeftDoubleBracket]", "jk", "\[RightDoubleBracket]"}], 
          "-", 
          RowBox[{
          "xl", "\[LeftDoubleBracket]", "id", "\[RightDoubleBracket]"}]}], 
         "<", 
         RowBox[{"2", " ", "dxk"}]}]}]}]}], ";"}], "\n", 
    RowBox[{
     RowBox[{
      RowBox[{"ad", "[", 
       RowBox[{"id_", ",", "jk_", ",", "xl__", ",", "xu__"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"1", "+", "1", "-", 
        RowBox[{"3", " ", 
         RowBox[{"c3", "[", 
          RowBox[{"2", "-", 
           FractionBox[
            RowBox[{
             RowBox[{
             "xknot", "\[LeftDoubleBracket]", "jk", "\[RightDoubleBracket]"}],
              "-", 
             RowBox[{
             "xl", "\[LeftDoubleBracket]", "id", "\[RightDoubleBracket]"}]}], 
            "dxk"]}], "]"}]}]}], "/;", 
       RowBox[{
        RowBox[{"OddQ", "[", "jk", "]"}], "&&", 
        RowBox[{
         RowBox[{
          RowBox[{
          "xknot", "\[LeftDoubleBracket]", "jk", "\[RightDoubleBracket]"}], 
          "-", 
          RowBox[{
          "xl", "\[LeftDoubleBracket]", "id", "\[RightDoubleBracket]"}]}], 
         ">", "0"}], "&&", 
        RowBox[{
         RowBox[{
          RowBox[{
          "xknot", "\[LeftDoubleBracket]", "jk", "\[RightDoubleBracket]"}], 
          "-", 
          RowBox[{
          "xl", "\[LeftDoubleBracket]", "id", "\[RightDoubleBracket]"}]}], 
         "\[LessEqual]", 
         RowBox[{"2", " ", "dxk"}]}], "&&", 
        RowBox[{
         RowBox[{
          RowBox[{
          "xu", "\[LeftDoubleBracket]", "id", "\[RightDoubleBracket]"}], "-", 
          RowBox[{
          "xknot", "\[LeftDoubleBracket]", "jk", "\[RightDoubleBracket]"}]}], 
         "\[GreaterEqual]", 
         RowBox[{"2", " ", "dxk"}]}]}]}]}], ";"}], "\n", 
    RowBox[{
     RowBox[{
      RowBox[{"ad", "[", 
       RowBox[{"id_", ",", "jk_", ",", "xl__", ",", "xu__"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"1", "-", 
        RowBox[{"3", " ", 
         RowBox[{"c1", "[", 
          FractionBox[
           RowBox[{
            RowBox[{
            "xl", "\[LeftDoubleBracket]", "id", "\[RightDoubleBracket]"}], 
            "-", 
            RowBox[{
            "xknot", "\[LeftDoubleBracket]", "jk", 
             "\[RightDoubleBracket]"}]}], "dxk"], "]"}]}]}], "/;", 
       RowBox[{
        RowBox[{"OddQ", "[", "jk", "]"}], "&&", 
        RowBox[{
         RowBox[{
          RowBox[{
          "xl", "\[LeftDoubleBracket]", "id", "\[RightDoubleBracket]"}], "-", 
          RowBox[{
          "xknot", "\[LeftDoubleBracket]", "jk", "\[RightDoubleBracket]"}]}], 
         "\[GreaterEqual]", "0"}], "&&", 
        RowBox[{
         RowBox[{
          RowBox[{
          "xl", "\[LeftDoubleBracket]", "id", "\[RightDoubleBracket]"}], "-", 
          RowBox[{
          "xknot", "\[LeftDoubleBracket]", "jk", "\[RightDoubleBracket]"}]}], 
         "\[LessEqual]", 
         RowBox[{"2", " ", "dxk"}]}], "&&", 
        RowBox[{
         RowBox[{
          RowBox[{
          "xu", "\[LeftDoubleBracket]", "id", "\[RightDoubleBracket]"}], "-", 
          RowBox[{
          "xknot", "\[LeftDoubleBracket]", "jk", "\[RightDoubleBracket]"}]}], 
         "\[GreaterEqual]", 
         RowBox[{"2", " ", "dxk"}]}]}]}]}], ";"}], "\n", 
    RowBox[{"Clear", "[", 
     RowBox[{"seconddiff", ",", "secondh", ",", "a", ",", "b"}], "]"}], "\n", 
    RowBox[{
     RowBox[{"seconddiff", "[", "x_Integer", "]"}], ":=", 
     RowBox[{
      RowBox[{"IdentityMatrix", "[", 
       RowBox[{"x", "-", "2"}], "]"}], "/.", "\[InvisibleSpace]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a___", ",", "1", ",", "b___"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"a", ",", 
         RowBox[{"-", "1"}], ",", "2", ",", 
         RowBox[{"-", "1"}], ",", "b"}], "}"}]}]}]}], "\n", 
    RowBox[{
     RowBox[{
      RowBox[{"secondh", "[", "n_", "]"}], ":=", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"seconddiff", "[", "n", "]"}], "]"}], ".", 
       RowBox[{"seconddiff", "[", "n", "]"}]}]}], ";"}], "\n", 
    RowBox[{
     RowBox[{"dxk", "=", "0.01"}], ";"}], "\n", 
    RowBox[{
     RowBox[{"xknot", "=", 
      RowBox[{"Range", "[", 
       RowBox[{"0.", ",", "1.0", ",", "dxk"}], "]"}]}], ";"}], "\n", 
    RowBox[{
     RowBox[{"nk", "=", 
      RowBox[{"Length", "[", "xknot", "]"}]}], ";"}], "\n", 
    RowBox[{
     RowBox[{"txl", "=", 
      RowBox[{"{", "0.", "}"}]}], ";"}], "\n", 
    RowBox[{
     RowBox[{"txu", "=", 
      RowBox[{"{", "0.501", "}"}]}], ";"}], "\n", 
    RowBox[{
     RowBox[{"cof", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"ad", "[", 
          RowBox[{"it", ",", "jt", ",", "txl", ",", "txu"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"it", ",", "1", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"jt", ",", "1", ",", "nk"}], "}"}]}], "]"}], "]"}]}], ";"}],
     "\n", 
    RowBox[{"lny", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"1", "+", 
       RowBox[{"xknot", "\[LeftDoubleBracket]", 
        RowBox[{
         RowBox[{"i", 
          SuperscriptBox["\[RightDoubleBracket]", "3.5"]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "nk"}], "}"}]}]}]}]}]}]}], "]"}], 
  ";"}], "\n", 
 FractionBox[
  RowBox[{
   RowBox[{"lny", ".", "cof"}], " ", "dxk"}], "3"], "\n", 
 RowBox[{
  SubsuperscriptBox["\[Integral]", 
   RowBox[{"txl", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
   RowBox[{"txu", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SuperscriptBox["x", "3.5"]}], ")"}], 
   RowBox[{"\[DifferentialD]", "x"}]}]}], "\n", 
 RowBox[{"cof", ";"}]}], "Input",
 PageWidth->Infinity,
 CellChangeTimes->{
  3.623664129878648*^9, {3.623665190388811*^9, 3.623665316142688*^9}, {
   3.6258268685421753`*^9, 3.625826871023829*^9}, {3.625826903544703*^9, 
   3.625826904019697*^9}, 3.6263496969700737`*^9, {3.6263497333920193`*^9, 
   3.626349734857971*^9}},
 EmphasizeSyntaxErrors->True,
 ImageRegion->{{0, 1}, {0, 1}},
 FontFamily->"Courier New",
 Background->GrayLevel[1]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"finaldata", "=", 
    RowBox[{"Sort", "[", "syndata", "]"}]}], ";"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"redfactor", "=", "1"}], ";"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"reduceddata", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"finaldata", "[", 
       RowBox[{"[", "jj", "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"jj", ",", "1", ",", 
        RowBox[{"Length", "[", "finaldata", "]"}], ",", "redfactor"}], 
       "}"}]}], "]"}]}], ";"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Clear", "[", "orgdat", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"physicaldat", "=", "reduceddata"}], ";"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"plotdataset", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"reduceddata", "[", 
         RowBox[{"[", 
          RowBox[{"jj", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"reduceddata", "[", 
         RowBox[{"[", 
          RowBox[{"jj", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"jj", ",", "1", ",", 
        RowBox[{"Length", "[", "reduceddata", "]"}], ",", "redfactor"}], 
       "}"}]}], "]"}]}], ";"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"orgplot", "=", 
    RowBox[{"MultipleListPlot", "[", 
     RowBox[{"reduceddata", ",", 
      RowBox[{"SymbolShape", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"PlotSymbol", "[", 
          RowBox[{"Triangle", ",", "4", ",", 
           RowBox[{"Filled", "\[Rule]", "False"}]}], "]"}], ",", 
         RowBox[{"PlotSymbol", "[", 
          RowBox[{"Box", ",", "3", ",", 
           RowBox[{"Filled", "\[Rule]", "True"}]}], "]"}], ",", 
         RowBox[{"PlotSymbol", "[", 
          RowBox[{"Diamond", ",", "6", ",", 
           RowBox[{"Filled", "\[Rule]", "False"}]}], "]"}], ",", 
         RowBox[{"PlotSymbol", "[", 
          RowBox[{"Star", ",", "6", ",", 
           RowBox[{"Filled", "\[Rule]", "True"}]}], "]"}]}], "}"}]}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"262", ",", "303"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.03"}], ",", "0.33"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"DefaultFont", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<Times\>\"", ",", "18"}], "}"}]}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<\[Lambda] <nm>\>\"", ",", "\"\<A<a.u.>\>\""}], "}"}]}], 
      ",", 
      RowBox[{"FrameStyle", "\[Rule]", 
       RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
      RowBox[{"FrameTicks", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"220", ",", "\"\<220\>\"", ",", 
             RowBox[{"{", 
              RowBox[{"0.025", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"265", ",", "\"\<\>\"", ",", 
             RowBox[{"{", 
              RowBox[{"0.025", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"275", ",", "\"\<\>\"", ",", 
             RowBox[{"{", 
              RowBox[{"0.025", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"285", ",", "\"\<\>\"", ",", 
             RowBox[{"{", 
              RowBox[{"0.025", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"295", ",", "\"\<\>\"", ",", 
             RowBox[{"{", 
              RowBox[{"0.025", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"280", ",", "\"\<280\>\"", ",", 
             RowBox[{"{", 
              RowBox[{"0.025", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"290", ",", "\"\<290\>\"", ",", 
             RowBox[{"{", 
              RowBox[{"0.025", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"270", ",", "\"\<270\>\"", ",", 
             RowBox[{"{", 
              RowBox[{"0.025", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"320", ",", "\"\<320\>\"", ",", 
             RowBox[{"{", 
              RowBox[{"0.025", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"300", ",", "\"\<300\>\"", ",", 
             RowBox[{"{", 
              RowBox[{"0.025", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}]}], 
          "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "\"\<0\>\"", ",", 
             RowBox[{"{", 
              RowBox[{"0.025", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"0.05", ",", "\"\<\>\"", ",", 
             RowBox[{"{", 
              RowBox[{"0.025", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"0.15", ",", "\"\<\>\"", ",", 
             RowBox[{"{", 
              RowBox[{"0.025", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"0.25", ",", "\"\<\>\"", ",", 
             RowBox[{"{", 
              RowBox[{"0.025", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"0.1", ",", "\"\<0.1\>\"", ",", 
             RowBox[{"{", 
              RowBox[{"0.025", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"0.3", ",", "\"\<0.3\>\"", ",", 
             RowBox[{"{", 
              RowBox[{"0.025", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"0.4", ",", "\"\<0.4\>\"", ",", 
             RowBox[{"{", 
              RowBox[{"0.025", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"0.2", ",", "\"\<0.2\>\"", ",", 
             RowBox[{"{", 
              RowBox[{"0.025", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"0.6", ",", "\"\<0.6\>\"", ",", 
             RowBox[{"{", 
              RowBox[{"0.025", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}]}], 
          "}"}], ",", "None", ",", "None"}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ImageSize", "\[Rule]", "330"}], ",", 
      RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}]}], ";"}]}]], "Input"],

Cell[BoxData["\[IndentingNewLine]"], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Length", "[", "reduceddata", "]"}]}]], "Input"],

Cell[BoxData["71"], "Output",
 CellChangeTimes->{3.623665693803649*^9, 3.625826390180232*^9, 
  3.6263497003780193`*^9, 3.626349743030514*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"basefactor", "=", "0.00"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rawdat", "=", 
   RowBox[{"Sort", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"physicaldat", "[", 
         RowBox[{"[", 
          RowBox[{"ii", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"physicaldat", "[", 
          RowBox[{"[", 
           RowBox[{"ii", ",", "2"}], "]"}], "]"}], "+", "basefactor"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"ii", ",", "1", ",", 
        RowBox[{"Length", "[", "physicaldat", "]"}], ",", 
        StyleBox["1",
         FontColor->RGBColor[1, 0, 0]]}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yvalue", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"rawdat", "[", 
      RowBox[{"[", 
       RowBox[{"jj", ",", "2"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"jj", ",", "1", ",", 
       RowBox[{"Length", "[", "rawdat", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Max", "[", "yvalue", "]"}], "\[IndentingNewLine]", "Null"}], "Input",
 CellChangeTimes->{{3.626308274882867*^9, 3.626308285502141*^9}}],

Cell[BoxData["0.2930487543164651`"], "Output",
 CellChangeTimes->{
  3.623660857461728*^9, 3.6236656938277893`*^9, 3.625826390203829*^9, 
   3.626308041162776*^9, {3.626308277012928*^9, 3.626308286235929*^9}, 
   3.6263497003966103`*^9, 3.6263497430568953`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{
     "lamda", ",", "n", ",", "viso", ",", "rin", ",", "rout", ",", "ht", ",", 
      "vis", ",", "srate", ",", "omega"}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"nd", "=", 
     RowBox[{"Length", "[", "rawdat", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"nk", "=", "401"}]}]}]], "Input"],

Cell[BoxData["401"], "Output",
 CellChangeTimes->{3.623660859350409*^9, 3.6236656938518353`*^9, 
  3.625826390226768*^9, 3.626349700401415*^9, 3.6263497430610027`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "lamda", ",", "n", ",", "viso", ",", "rin", ",", "rout", ",", "ht", ",", 
    "vis", ",", "srate", ",", "omega"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"nd", "=", 
   RowBox[{"Length", "[", "rawdat", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nk", "=", "401"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dxl", "=", 
   RowBox[{"N", "[", 
    RowBox[{"Table", "[", 
     RowBox[{"0", ",", 
      RowBox[{"{", 
       RowBox[{"ii", ",", "1", ",", "nd"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"xu", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"rawdat", "[", 
     RowBox[{"[", 
      RowBox[{"ii", ",", "1"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"ii", ",", "1", ",", "nd"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lengthscale", "=", 
   RowBox[{
    RowBox[{"xu", "[", 
     RowBox[{"[", "nd", "]"}], "]"}], "-", 
    RowBox[{"xu", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"velscale", "=", 
   RowBox[{"Max", "[", "yvalue", "]"}]}], " ", 
  RowBox[{"(*", 
   RowBox[{"rawdat", "[", 
    RowBox[{"[", 
     RowBox[{"nd", ",", "2"}], "]"}], "]"}], "*)"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dxu", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"xu", "-", 
      RowBox[{"xu", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "/", "lengthscale"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"outcom", "=", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"rawdat", "[", 
       RowBox[{"[", 
        RowBox[{"ii", ",", "2"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"ii", ",", "1", ",", "nd"}], "}"}]}], "]"}], "/", 
    "velscale"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dxk", "=", 
   RowBox[{"1.", "/", 
    RowBox[{"(", 
     RowBox[{"nk", "-", "1."}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xknot", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"0", ",", "1", ",", "dxk"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 PageWidth->Infinity,
 CellChangeTimes->{{3.626308290543084*^9, 3.626308291108664*^9}},
 ImageRegion->{{0, 1}, {0, 1}},
 FontFamily->"Courier New",
 Background->GrayLevel[1]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "265.`", ",", "265.5`", ",", "266.`", ",", "266.5`", ",", "267.`", ",", 
   "267.5`", ",", "268.`", ",", "268.5`", ",", "269.`", ",", "269.5`", ",", 
   "270.`", ",", "270.5`", ",", "271.`", ",", "271.5`", ",", "272.`", ",", 
   "272.5`", ",", "273.`", ",", "273.5`", ",", "274.`", ",", "274.5`", ",", 
   "275.`", ",", "275.5`", ",", "276.`", ",", "276.5`", ",", "277.`", ",", 
   "277.5`", ",", "278.`", ",", "278.5`", ",", "279.`", ",", "279.5`", ",", 
   "280.`", ",", "280.5`", ",", "281.`", ",", "281.5`", ",", "282.`", ",", 
   "282.5`", ",", "283.`", ",", "283.5`", ",", "284.`", ",", "284.5`", ",", 
   "285.`", ",", "285.5`", ",", "286.`", ",", "286.5`", ",", "287.`", ",", 
   "287.5`", ",", "288.`", ",", "288.5`", ",", "289.`", ",", "289.5`", ",", 
   "290.`", ",", "290.5`", ",", "291.`", ",", "291.5`", ",", "292.`", ",", 
   "292.5`", ",", "293.`", ",", "293.5`", ",", "294.`", ",", "294.5`", ",", 
   "295.`", ",", "295.5`", ",", "296.`", ",", "296.5`", ",", "297.`", ",", 
   "297.5`", ",", "298.`", ",", "298.5`", ",", "299.`", ",", "299.5`", ",", 
   "300.`"}], "}"}]], "Output",
 CellChangeTimes->{3.6263082916346397`*^9, 3.6263497004216347`*^9, 
  3.6263497430871553`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "extrazero", "]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"extrazero", "[", "nkw_", "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"iiw", ",", "1", ",", "nkw"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 PageWidth->Infinity,
 ImageRegion->{{0, 1}, {0, 1}},
 FontFamily->"Courier New",
 Background->GrayLevel[1]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"extracolm", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{"1.", ",", 
         RowBox[{"{", 
          RowBox[{"iiw", ",", "1", ",", "nd"}], "}"}]}], "]"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"dxu", "[", 
          RowBox[{"[", "iiw", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"iiw", ",", "1", ",", "nd"}], "}"}]}], "]"}]}], "}"}]}], 
    ";"}], "*)"}], "\[IndentingNewLine]", 
  StyleBox[
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"extracolm", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{"1.", ",", 
          RowBox[{"{", 
           RowBox[{"iiw", ",", "1", ",", "nd"}], "}"}]}], "]"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"dxu", "[", 
           RowBox[{"[", "iiw", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"iiw", ",", "1", ",", "nd"}], "}"}]}], "]"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"dxu", "[", 
             RowBox[{"[", "iiw", "]"}], "]"}], "^", "2"}], "/", "2"}], ",", 
          RowBox[{"{", 
           RowBox[{"iiw", ",", "1", ",", "nd"}], "}"}]}], "]"}]}], "}"}]}], 
     ";"}], "*)"}],
   FontColor->RGBColor[1, 0, 0]], 
  StyleBox["\[IndentingNewLine]",
   FontColor->RGBColor[1, 0, 0]], 
  StyleBox[
   RowBox[{
    RowBox[{"extracolm", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{"1.", ",", 
         RowBox[{"{", 
          RowBox[{"iiw", ",", "1", ",", "nd"}], "}"}]}], "]"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"dxu", "[", 
          RowBox[{"[", "iiw", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"iiw", ",", "1", ",", "nd"}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"dxu", "[", 
            RowBox[{"[", "iiw", "]"}], "]"}], "^", "2"}], "/", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"iiw", ",", "1", ",", "nd"}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"dxu", "[", 
            RowBox[{"[", "iiw", "]"}], "]"}], "^", "3"}], "/", "6"}], ",", 
         RowBox[{"{", 
          RowBox[{"iiw", ",", "1", ",", "nd"}], "}"}]}], "]"}]}], "}"}]}], 
    ";"}],
   FontColor->RGBColor[1, 0, 0]]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"seconddiffp1", "[", "nkw_", "]"}], ":=", 
    RowBox[{"Transpose", "[", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"seconddiff", "[", "nkw", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"extrazero", "[", 
          RowBox[{"nkw", "-", "2"}], "]"}], ",", 
         RowBox[{"extrazero", "[", 
          RowBox[{"nkw", "-", "2"}], "]"}]}], "}"}]}], "]"}], "]"}]}], "*)"}],
   "\[IndentingNewLine]", 
  RowBox[{
   StyleBox[
    RowBox[{
     RowBox[{"seconddiffp1", "[", "nkw_", "]"}], ":=", 
     RowBox[{"Transpose", "[", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"seconddiff", "[", "nkw", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"extrazero", "[", 
           RowBox[{"nkw", "-", "2"}], "]"}], ",", 
          RowBox[{"extrazero", "[", 
           RowBox[{"nkw", "-", "2"}], "]"}], ",", 
          RowBox[{"extrazero", "[", 
           RowBox[{"nkw", "-", "2"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"extrazero", "[", 
           RowBox[{"nkw", "-", "2"}], "]"}]}], "}"}]}], "]"}], "]"}]}],
    FontColor->RGBColor[1, 0, 0]], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"secondhp1", "[", "n_", "]"}], ":=", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"seconddiffp1", "[", "n", "]"}], "]"}], ".", 
      RowBox[{"seconddiffp1", "[", "n", "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bala", "=", 
     RowBox[{"secondh", "[", "nk", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"balap1", "=", 
     RowBox[{"secondhp1", "[", "nk", "]"}]}], ";"}]}]}]], "Input",
 PageWidth->Infinity,
 ImageRegion->{{0, 1}, {0, 1}},
 FontFamily->"Courier New",
 Background->GrayLevel[1]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"ximxj", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"dxu", "[", 
           RowBox[{"[", "ii", "]"}], "]"}], "\[GreaterEqual]", 
          RowBox[{"xknot", "[", 
           RowBox[{"[", "jj", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"dxu", "[", 
           RowBox[{"[", "ii", "]"}], "]"}], "-", 
          RowBox[{"xknot", "[", 
           RowBox[{"[", "jj", "]"}], "]"}]}], ",", "0"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"ii", ",", "1", ",", "nd"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"jj", ",", "1", ",", "nk"}], "}"}]}], "]"}]}], ";"}], "*)"}], 
  "\n", 
  RowBox[{
   StyleBox[
    RowBox[{
     RowBox[{"ximxj", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"dxu", "[", 
            RowBox[{"[", "ii", "]"}], "]"}], "\[GreaterEqual]", 
           RowBox[{"xknot", "[", 
            RowBox[{"[", "jj", "]"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"dxu", "[", 
               RowBox[{"[", "ii", "]"}], "]"}], "-", 
              RowBox[{"xknot", "[", 
               RowBox[{"[", "jj", "]"}], "]"}]}], ")"}], "^", "3"}], "/", 
           "6"}], ",", "0"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"ii", ",", "1", ",", "nd"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"jj", ",", "1", ",", "nk"}], "}"}]}], "]"}]}], ";"}],
    FontColor->RGBColor[1, 0, 0]], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"dcof", "=", 
      RowBox[{
       FractionBox["1", "3."], 
       RowBox[{"(", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ad", "[", 
            RowBox[{"idd", ",", "kk", ",", "dxl", ",", "dxu"}], "]"}], "*", 
           "dxk", "*", 
           RowBox[{
            RowBox[{"ximxj", "[", 
             RowBox[{"[", 
              RowBox[{"idd", ",", "kk"}], "]"}], "]"}], "/", 
            RowBox[{"outcom", "[", 
             RowBox[{"[", "idd", "]"}], "]"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"idd", ",", "1", ",", "nd"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"kk", ",", "1", ",", "nk"}], "}"}]}], "]"}], ")"}]}]}], 
     ";"}], "*)"}], "\[IndentingNewLine]", "ximxj", "\[IndentingNewLine]", 
   RowBox[{"Text", "[", 
    RowBox[{"\"\<dxl\>\"", ",", "dxl"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Text", "[", 
    RowBox[{"\"\<dxu\>\"", ",", "dxu"}], "]"}], "\n", 
   RowBox[{
    RowBox[{"dcof", "=", 
     RowBox[{
      FractionBox["1", "3."], 
      RowBox[{"(", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ad", "[", 
           RowBox[{"idd", ",", "kk", ",", "dxl", ",", "dxu"}], "]"}], "*", 
          "dxk", "*", 
          RowBox[{"ximxj", "[", 
           RowBox[{"[", 
            RowBox[{"idd", ",", "kk"}], "]"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"idd", ",", "1", ",", "nd"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"kk", ",", "1", ",", "nk"}], "}"}]}], "]"}], ")"}]}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"finalcof", "=", 
     RowBox[{"Transpose", "[", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", "dcof", "]"}], ",", "extracolm"}], "]"}], 
      "]"}]}], ";"}], "\n", "finalcof", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dcof", "=", "finalcof"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6258263796694727`*^9, 3.625826381074848*^9}, {
  3.6258266943523397`*^9, 3.6258266964092617`*^9}, {3.6263477789433813`*^9, 
  3.626347797969829*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          TemplateBox[{"1"},
           "OutputSizeLimit`Skeleton",
           DisplayFunction->(FrameBox[
             RowBox[{"\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
             Background -> GrayLevel[0.75], 
             BaseStyle -> {
              "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
               ShowStringCharacters -> False}, BaselinePosition -> Baseline, 
             ContentPadding -> False, FrameMargins -> 1, FrameStyle -> 
             GrayLevel[0.75], RoundingRadius -> 7]& )], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{74., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{67., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 766, 25382422812114493603, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{73., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 766, 25382422812114493603, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 766, 25382422812114493603, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{100., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[766]]], "Output",
 CellChangeTimes->{{3.6258263824037113`*^9, 3.625826391158414*^9}, 
   3.6258266976998177`*^9, {3.626347787860602*^9, 3.626347798747263*^9}, 
   3.6263497008350887`*^9, 3.626349743387376*^9}],

Cell[BoxData[
 RowBox[{"Text", "[", 
  RowBox[{"\<\"dxl\"\>", ",", 
   RowBox[{"{", 
    RowBox[{
    "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`"}], "}"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{{3.6258263824037113`*^9, 3.625826391158414*^9}, 
   3.6258266976998177`*^9, {3.626347787860602*^9, 3.626347798747263*^9}, 
   3.6263497008350887`*^9, 3.6263497433927097`*^9}],

Cell[BoxData[
 RowBox[{"Text", "[", 
  RowBox[{"\<\"dxu\"\>", ",", 
   RowBox[{"{", 
    RowBox[{
    "0.`", ",", "0.014285714285714285`", ",", "0.02857142857142857`", ",", 
     "0.04285714285714286`", ",", "0.05714285714285714`", ",", 
     "0.07142857142857142`", ",", "0.08571428571428572`", ",", 
     "0.09999999999999999`", ",", "0.11428571428571428`", ",", 
     "0.12857142857142856`", ",", "0.14285714285714285`", ",", 
     "0.15714285714285714`", ",", "0.17142857142857143`", ",", 
     "0.18571428571428572`", ",", "0.19999999999999998`", ",", 
     "0.21428571428571427`", ",", "0.22857142857142856`", ",", 
     "0.24285714285714285`", ",", "0.2571428571428571`", ",", 
     "0.2714285714285714`", ",", "0.2857142857142857`", ",", "0.3`", ",", 
     "0.3142857142857143`", ",", "0.32857142857142857`", ",", 
     "0.34285714285714286`", ",", "0.35714285714285715`", ",", 
     "0.37142857142857144`", ",", "0.3857142857142857`", ",", 
     "0.39999999999999997`", ",", "0.41428571428571426`", ",", 
     "0.42857142857142855`", ",", "0.44285714285714284`", ",", 
     "0.45714285714285713`", ",", "0.4714285714285714`", ",", 
     "0.4857142857142857`", ",", "0.5`", ",", "0.5142857142857142`", ",", 
     "0.5285714285714286`", ",", "0.5428571428571428`", ",", 
     "0.5571428571428572`", ",", "0.5714285714285714`", ",", 
     "0.5857142857142857`", ",", "0.6`", ",", "0.6142857142857142`", ",", 
     "0.6285714285714286`", ",", "0.6428571428571428`", ",", 
     "0.6571428571428571`", ",", "0.6714285714285714`", ",", 
     "0.6857142857142857`", ",", "0.7`", ",", "0.7142857142857143`", ",", 
     "0.7285714285714285`", ",", "0.7428571428571429`", ",", 
     "0.7571428571428571`", ",", "0.7714285714285714`", ",", 
     "0.7857142857142857`", ",", "0.7999999999999999`", ",", 
     "0.8142857142857143`", ",", "0.8285714285714285`", ",", 
     "0.8428571428571429`", ",", "0.8571428571428571`", ",", 
     "0.8714285714285714`", ",", "0.8857142857142857`", ",", "0.9`", ",", 
     "0.9142857142857143`", ",", "0.9285714285714285`", ",", 
     "0.9428571428571428`", ",", "0.9571428571428571`", ",", 
     "0.9714285714285714`", ",", "0.9857142857142857`", ",", "1.`"}], "}"}]}],
   "]"}]], "Output",
 CellChangeTimes->{{3.6258263824037113`*^9, 3.625826391158414*^9}, 
   3.6258266976998177`*^9, {3.626347787860602*^9, 3.626347798747263*^9}, 
   3.6263497008350887`*^9, 3.626349743394678*^9}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          TemplateBox[{"1"},
           "OutputSizeLimit`Skeleton",
           DisplayFunction->(FrameBox[
             RowBox[{"\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
             Background -> GrayLevel[0.75], 
             BaseStyle -> {
              "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
               ShowStringCharacters -> False}, BaselinePosition -> Baseline, 
             ContentPadding -> False, FrameMargins -> 1, FrameStyle -> 
             GrayLevel[0.75], RoundingRadius -> 7]& )], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{74., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{67., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 771, 25382422812114493603, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{73., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 771, 25382422812114493603, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 771, 25382422812114493603, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{100., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[771]]], "Output",
 CellChangeTimes->{{3.6258263824037113`*^9, 3.625826391158414*^9}, 
   3.6258266976998177`*^9, {3.626347787860602*^9, 3.626347798747263*^9}, 
   3.6263497008350887`*^9, 3.626349743914365*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "nd"}]], "Input"],

Cell[BoxData["71"], "Output",
 CellChangeTimes->{3.623660875047716*^9, 3.6236656947980623`*^9, 
  3.625826391245678*^9, 3.626349701438202*^9, 3.626349743949955*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"wtf", "=", 
    RowBox[{"0.035", "*", 
     RowBox[{"10", "^", 
      RowBox[{"-", "12"}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"doutput", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"1", ",", 
        RowBox[{"{", 
         RowBox[{"inw", ",", "1", ",", "nd"}], "}"}]}], "]"}]}], ";"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"doutput", "=", "outcom"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dnewmat", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"Transpose", "[", "dcof", "]"}], ".", "dcof"}], "+", 
      RowBox[{"wtf", "*", "balap1"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dsmoother", "=", 
     RowBox[{
      RowBox[{"Inverse", "[", "dnewmat", "]"}], ".", 
      RowBox[{"Transpose", "[", "dcof", "]"}], ".", "doutput"}]}], 
    ";"}]}]}]], "Input",
 PageWidth->Infinity,
 ImageRegion->{{0, 1}, {0, 1}},
 FontFamily->"Courier New",
 Background->GrayLevel[1]],

Cell[BoxData["3.5`*^-14"], "Output",
 CellChangeTimes->{3.626349701454041*^9, 3.6263497439740467`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Inverse", "::", "luc"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Result for \[NoBreak]\\!\\(Inverse\\)\[NoBreak] of badly \
conditioned matrix \[NoBreak]\\!\\({\\(\[LeftSkeleton] 1 \[RightSkeleton]\\)}\
\\)\[NoBreak] may contain significant numerical errors. \\!\\(\\*ButtonBox[\\\
\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/luc\\\", ButtonNote -> \
\\\"Inverse::luc\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.626349701605324*^9, 3.626349744116026*^9}],

Cell[BoxData[
 RowBox[{"3.5`*^-14", "SSE", " ", "Portable", " ", "Wireless", " ", 
  "Bluetooth", " ", "Speaker"}]], "Input",
 CellChangeTimes->{{3.625826418122931*^9, 3.62582641812925*^9}}],

Cell[BoxData[
 RowBox[{"3.5`*^-14", " ", "Bluetooth", " ", "Portable", " ", "Speaker", " ", 
  "SSE", " ", "Wireless"}]], "Output",
 CellChangeTimes->{3.6263497016249723`*^9, 3.626349744140266*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"unit", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", "1", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "nd"}], "}"}]}], "]"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{"pectdev", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"dcof", ".", "dsmoother"}], "-", "outcom"}], ")"}], "/", 
    "outcom"}], "*", "100"}]}], "\n", 
 RowBox[{
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{"pectdev", "[", 
      RowBox[{"[", "jj", "]"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"jj", ",", "2", ",", 
      RowBox[{"Length", "[", "pectdev", "]"}]}], "}"}]}], "]"}], "/", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Length", "[", "pectdev", "]"}], "-", "1"}], 
   ")"}]}], "\[IndentingNewLine]", 
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"dcof", ".", "dsmoother"}], "-", "outcom"}], ")"}], "/", 
       "outcom"}], "]"}], ".", "unit"}], ")"}], "*", "100"}], "nd"]}], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.00024339562606226413`", ",", 
   RowBox[{"-", "0.0006894619992814031`"}], ",", "0.00044832194477170115`", 
   ",", "0.00010696388705879317`", ",", 
   RowBox[{"-", "0.0003063417536926921`"}], ",", 
   RowBox[{"-", "0.00036306439644327325`"}], ",", 
   RowBox[{"-", "0.00032875684836709254`"}], ",", 
   RowBox[{"-", "0.0003976157938146107`"}], ",", 
   RowBox[{"-", "0.0005492445416123428`"}], ",", 
   RowBox[{"-", "0.0007037597058762769`"}], ",", 
   RowBox[{"-", "0.0008302695706647381`"}], ",", 
   RowBox[{"-", "0.0009443219202330091`"}], ",", 
   RowBox[{"-", "0.0010666060182087569`"}], ",", 
   RowBox[{"-", "0.0012025624189576998`"}], ",", 
   RowBox[{"-", "0.0013481505688407523`"}], ",", 
   RowBox[{"-", "0.0015013368137379909`"}], ",", 
   RowBox[{"-", "0.0016646679576965123`"}], ",", 
   RowBox[{"-", "0.0018433113483027528`"}], ",", 
   RowBox[{"-", "0.002042737927369409`"}], ",", 
   RowBox[{"-", "0.00226769404464015`"}], ",", 
   RowBox[{"-", "0.002523245700604484`"}], ",", 
   RowBox[{"-", "0.002816252587864886`"}], ",", 
   RowBox[{"-", "0.0031552691706993887`"}], ",", 
   RowBox[{"-", "0.0035509046366030035`"}], ",", 
   RowBox[{"-", "0.004016595458944394`"}], ",", 
   RowBox[{"-", "0.004568636851437006`"}], ",", 
   RowBox[{"-", "0.005227034561063813`"}], ",", 
   RowBox[{"-", "0.00601728020844284`"}], ",", 
   RowBox[{"-", "0.0069719671458958665`"}], ",", 
   RowBox[{"-", "0.008131970708241178`"}], ",", 
   RowBox[{"-", "0.00954941720362028`"}], ",", 
   RowBox[{"-", "0.011290281487124791`"}], ",", 
   RowBox[{"-", "0.013437236785949613`"}], ",", 
   RowBox[{"-", "0.01609382167073059`"}], ",", 
   RowBox[{"-", "0.019388095368991932`"}], ",", 
   RowBox[{"-", "0.023474419671710496`"}], ",", 
   RowBox[{"-", "0.028533835601401346`"}], ",", 
   RowBox[{"-", "0.03476901661562277`"}], ",", 
   RowBox[{"-", "0.04239143140217645`"}], ",", 
   RowBox[{"-", "0.05160216185598706`"}], ",", 
   RowBox[{"-", "0.06256559580717326`"}], ",", 
   RowBox[{"-", "0.07538205323896006`"}], ",", 
   RowBox[{"-", "0.0900764561995405`"}], ",", 
   RowBox[{"-", "0.10662124548261023`"}], ",", 
   RowBox[{"-", "0.12499578107078291`"}], ",", 
   RowBox[{"-", "0.14528182320831826`"}], ",", 
   RowBox[{"-", "0.16777037504546033`"}], ",", 
   RowBox[{"-", "0.19305460100462304`"}], ",", 
   RowBox[{"-", "0.2221094947854775`"}], ",", 
   RowBox[{"-", "0.2563738378311974`"}], ",", 
   RowBox[{"-", "0.2978582507180887`"}], ",", 
   RowBox[{"-", "0.34932501747384564`"}], ",", 
   RowBox[{"-", "0.4145748965614712`"}], ",", 
   RowBox[{"-", "0.49889199313868027`"}], ",", 
   RowBox[{"-", "0.6097377544029866`"}], ",", 
   RowBox[{"-", "0.7578240903782644`"}], ",", 
   RowBox[{"-", "0.9587821742620912`"}], ",", 
   RowBox[{"-", "1.2357933752903205`"}], ",", 
   RowBox[{"-", "1.6237614969654404`"}], ",", 
   RowBox[{"-", "2.1759976620487014`"}], ",", 
   RowBox[{"-", "2.975131256397653`"}], ",", 
   RowBox[{"-", "4.151279725148778`"}], ",", 
   RowBox[{"-", "5.912857212461665`"}], ",", 
   RowBox[{"-", "8.599366926407198`"}], ",", 
   RowBox[{"-", "12.772425223961218`"}], ",", 
   RowBox[{"-", "19.37464467585167`"}], ",", 
   RowBox[{"-", "30.013940926290445`"}], ",", 
   RowBox[{"-", "47.48771852225967`"}], ",", 
   RowBox[{"-", "76.76687263154935`"}], ",", 
   RowBox[{"-", "126.82691020419381`"}], ",", 
   RowBox[{"-", "213.9119633065473`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.623660879051733*^9, 3.623665695192766*^9, 
  3.625826391528552*^9, 3.6263497016486597`*^9, 3.6263497441701736`*^9}],

Cell[BoxData["7.992514323573365`"], "Output",
 CellChangeTimes->{3.623660879051733*^9, 3.623665695192766*^9, 
  3.625826391528552*^9, 3.6263497016486597`*^9, 3.626349744172204*^9}],

Cell[BoxData[
 RowBox[{"{", "7.879947127405091`", "}"}]], "Output",
 CellChangeTimes->{3.623660879051733*^9, 3.623665695192766*^9, 
  3.625826391528552*^9, 3.6263497016486597`*^9, 3.626349744173279*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"ListPlot", "[", 
   RowBox[{"dsmoother", ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011111111111111112`], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw1mHk8len7x0+TNo2+pj3VOKZVCllL4pPQQkJkLcdyLMd2HGexJMeWIssg
DaVORCSlDWF0pjSmRWlfTEWNpKZoWpSKn9/rXE//9Hq7ns9znc99X/d9X8+t
4RPuyP2BxWLtGcFi/f//in995i8kVfZHN2eD/oA1FQdNPodkEI+FWt0vI89r
phGrYmmN9cTyzh3Ek6G/fe41vaIk4ulwPlxobOoiJZ6FF7IbfDfNGGI2Tmlc
XpJaFEn8C2q0C/+7MpdHPBefvG2GGma7E89H2s2ohV5vz51X8EIoP/na7brM
Xa7gRUj/ISuwyZJHvBhpB0u8/z0bSayN8a+s40psYoh1Me/GhJKvQinxUozq
tlEz+yuJWA+DZfal8exUYn0MNlfe+V98GrEBSnS22MzuyiA2RFjMjbN3K7KJ
jfBMS6WqkZtDbIyM42XJt+fnES/Ds7VK/d/e7CFejsH+zvJZDXuJTdCjVutb
nVlAvALmSl2TTwXuIzbFT8/u5/24roh4JbKUG4+06xwkNgP3m+v2NZkyYnMU
GJR/ikw9RAyYqCcfmZFUrGAp0FYZMPZvaQnFV8G2fvDGKulhiq+C/Ymk7fek
pRS3gNrQ3hmDCWUUt0DKJb/TE5KOUHw1dpjLqnYklVN8NYznj7TflVhBcUvE
6M9MT4g/SnFLpJi1jyuOrqS4Fa7PicvX4x+juBXUBM+DYn2qKG6Nrse/Btds
PE5xa9zZ4DGobnyC4msQPCmjfMyP1RRfg8LqjIqOKGLWWmgXtPj81cnE16Le
SSXI1/okxdfhRfhqTe8yYuk6sEMTY0NHnKL4esTd1/y4zIVYuh6jFhQtjTnC
xG1w03C39Pk7Jm4Dx+u3lmoanaa4Lb5YdpuOFRJLbRFj/KTCoJKJb4DD6h4j
fjsT34CppXqTBEpnKG6HkvvaT7/OI5ba4cuycVk3zZn4RggEU9WrHJj4RgRH
t7S7ezBxe6zVu5C1z5MY9gj66exbU2fmeXtoFHo2jbYilg8/b8a3uabF6B0g
TGRFbB3H6B2g1hmWtOcx83sdcHV7/sH15cRyB7zqF1V6BzH+HDGT9Xd9A5sY
jpir9brP8jozXo4wPqdU2RtBLHdE1a77zyvHM+O7CUYqF1y37aP5wSZ48nP7
vTSY+doE7ouPoT5FNL/yTfA5fcw053/M/Dvhb6U3c1T6qH7ghNrqzMozVVRf
UifEFm1aEuBK9Sd3guHCnd9FfVSvLGfoPbezthJTPcMZGpO3Npq+ovqXOsOn
vUv9H9sy0g8/r5tRceoArSfWZhjY2r207KD1h82wCXSrMppI61O6GcFWL2YI
eAdIvxkiu6XNX3ILSe+CrWM++mQW55PeBTN7n9y4sJf2G6kLxmVYbs17tZv0
LnjQcfVuU3Qy6V2xLqtfJeYPCeldUcsd88lVzY30rij7fnJbySt/KPSuaCk/
dHsBL07BLDdESTe1trSkKhhuMEjQfGglofND6oZ6/XjnxIl7SO8G9V+z7F1O
F5DeHRcm1QamuhwgvTs+hUR9DNh+iPTuWCWuWhfYVkJ6d1xqvoD97DLSe8Dp
jsHfd0LLSe+BevPxyZ01R0nvgd++Gm3IGzhGeg9k6D3f22B8gvSeyH7A/S2v
ppr0nuAvV7/24NpJ0nvim1bC+clPTpHeE93F7vKantOk34IzrX3GS3rPkH4L
iic+vNzz5izpt+Dzcn9r764a0m9BWbFj+I93a0m/FfGuGzr9G+tIvxVlRlrr
3xWeI/1WpLyc6LuUX0/6rbiyOXXFyRUNpPfC0p6JLkPfiOGF+2s0LlafbiS9
F7SKtLK9vX4nvRe6VP/8++QQMYsDUeqOyevymhTM5kBlauLzu7PO0/s4CJpy
Z7FKATGHAweN+OdOSnJ6Pwdmr25urjMklnGwsm275x4OsZwDH4OAsLvJxB0c
pIbcm84tJmZ540bN5UcG54jZ3vB/2zuw7DIxvGGjqTybd4uY443km+EPL9xh
8ntD5fBAjmUbk98bjcl/er1rZvJ7g6OcoXzzFJN/+H0hrIE3BUx+HyTNEC52
iWHyD/NvE5f87MTk98GO5VX3XRcw+X3wtOtjlflLGg+pD8q3VTqqi4hlPtjm
+eRC5kcaT7kPGgOyeHeCiDt88Cxf67TJLWb8fRFxxfTHSTrEbF9UrNQ3OiWl
+YMvFufHJghbaH45vohbtnRZ3UhiqS/yqgxcnhlSfch80dS+/qXbVqofuS9q
5zk2p8dRfXX4wvP2jVVduUz9+cFQWGrw8BDVJ9sPftz8u+1HqH7hh92shDu+
ZVTfHD9c/UF1oKeI6l/qh6f6kat7Mml9yPxgvr5/weNoWj9yP2xoKeq08KL1
1eGH/esiBTrxxyk/F0/+9Dx62ojWJ5uLruYf3k54UUH5uaj89/UWs8wjlJ+L
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
pKylDe9PLST/0ZCuTDvxJoyD/wNVXCcO
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 405.}, {-7256.8461286803495`, 8617.522260644248}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.623660881146076*^9, 3.623665695318077*^9, 
  3.625826391645019*^9, 3.6263497016818943`*^9, 3.626349744215426*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "nk"}]], "Input"],

Cell[BoxData["401"], "Output",
 CellChangeTimes->{3.623665695332773*^9, 3.6258263916708937`*^9, 
  3.6263497016914*^9, 3.6263497442276993`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Length", "[", "dsmoother", "]"}]}]], "Input"],

Cell[BoxData["405"], "Output",
 CellChangeTimes->{3.6236656953580513`*^9, 3.625826391692589*^9, 
  3.626349701706635*^9, 3.626349744270597*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"d4gammadat", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"xknot", "[", 
        RowBox[{"[", "kkw", "]"}], "]"}], ",", 
       RowBox[{"dsmoother", "[", 
        RowBox[{"[", "kkw", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"kkw", ",", "1", ",", "nk"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"d4fun", "[", "dlessr_", "]"}], "=", 
   RowBox[{
    RowBox[{"Interpolation", "[", "d4gammadat", "]"}], "[", "dlessr", "]"}]}],
   ";"}]}], "Input"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"d3fun", "[", "kaiw_", "]"}], "=", 
     RowBox[{
      RowBox[{"NDSolve", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"y", "'"}], "[", "kaiw", "]"}], "\[Equal]", 
           RowBox[{"d4fun", "[", "kaiw", "]"}]}], ",", 
          RowBox[{
           RowBox[{"y", "[", "0", "]"}], "\[Equal]", 
           RowBox[{"dsmoother", "[", 
            RowBox[{"[", 
             RowBox[{"nk", "+", "4"}], "]"}], "]"}]}]}], "}"}], ",", 
        RowBox[{"y", "[", "kaiw", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"kaiw", ",", "0", ",", "1"}], "}"}]}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"d2fun", "[", "kaiw_", "]"}], "=", 
   RowBox[{
    RowBox[{"NDSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"y", "'"}], "[", "kaiw", "]"}], "\[Equal]", 
         RowBox[{"d3fun", "[", "kaiw", "]"}]}], ",", 
        RowBox[{
         RowBox[{"y", "[", "0", "]"}], "\[Equal]", 
         RowBox[{"dsmoother", "[", 
          RowBox[{"[", 
           RowBox[{"nk", "+", "3"}], "]"}], "]"}]}]}], "}"}], ",", 
      RowBox[{"y", "[", "kaiw", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"kaiw", ",", "0", ",", "1"}], "}"}]}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"d1fun", "[", "kaiw_", "]"}], "=", 
   RowBox[{
    RowBox[{"NDSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"y", "'"}], "[", "kaiw", "]"}], "\[Equal]", 
         RowBox[{"d2fun", "[", "kaiw", "]"}]}], ",", 
        RowBox[{
         RowBox[{"y", "[", "0", "]"}], "\[Equal]", 
         RowBox[{"dsmoother", "[", 
          RowBox[{"[", 
           RowBox[{"nk", "+", "2"}], "]"}], "]"}]}]}], "}"}], ",", 
      RowBox[{"y", "[", "kaiw", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"kaiw", ",", "0", ",", "1"}], "}"}]}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"d0fun", "[", "kaiw_", "]"}], "=", 
   RowBox[{
    RowBox[{"NDSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"y", "'"}], "[", "kaiw", "]"}], "\[Equal]", 
         RowBox[{"d1fun", "[", "kaiw", "]"}]}], ",", 
        RowBox[{
         RowBox[{"y", "[", "0", "]"}], "\[Equal]", 
         RowBox[{"dsmoother", "[", 
          RowBox[{"[", 
           RowBox[{"nk", "+", "1"}], "]"}], "]"}]}]}], "}"}], ",", 
      RowBox[{"y", "[", "kaiw", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"kaiw", ",", "0", ",", "1"}], "}"}]}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"d4fun", "[", "dlessr", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"dlessr", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"d3fun", "[", "dlessr", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"dlessr", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"d2fun", "[", "dlessr", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"dlessr", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"d1fun", "[", "dlessr", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"dlessr", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[
  RowBox[{"Plot", "[", 
    RowBox[{
      RowBox[{"d0fun", "[", "dlessr", "]"}], ",", 
      RowBox[{"{", 
        RowBox[{"dlessr", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}], "\[IndentingNewLine]",
   "\[IndentingNewLine]"], "\[IndentingNewLine]"}], "Input",
 EmphasizeSyntaxErrors->True],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
SOh/O7zBtg==
     "]]}},
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6236656955249777`*^9, 3.625826392476842*^9, 
  3.6263497017938967`*^9, 3.626349744493743*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6236656955249777`*^9, 3.625826392476842*^9, 
  3.6263497017938967`*^9, 3.6263497445252237`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
NXoQW68kBSIbo7VXRElYi/hYTacOBWrv/D7Pr0DCdBjVeR1ECpw3GmGNVyZh
CWXPX7UbUiB28+/0NnUS5mFr4f/dggKud+BurC4J69gjde6bNQVWSTkSRfok
jDi9erTVlgJ/FJvnyvaRMPawXNWvjhQQ0Mnd7W9Ewq4cf7DriwsFpC4VXVYz
IWE90k7bm89T4MbXpaEWMxJ+X7jHPl2hwOSect4qKxLG/Zje0XiNAst77jRy
HSZh1+wxrOEWBdRctj00tiFhJotXX9c9oMA2MkPc9RgJy8NI4bWPKPCM/phu
dYKECUTK3MAiKaB98WbuTnsSduu/DTfyUwr0WlJcvzuQsGEFil3NSwrciarl
9PiPhJGW3xlVv6GAKHJOZDiSsPf1oepVqRRId+kUPnqahInGnJGozMK/X9t/
5c0ZEnbvtD5nRR4FvHjIGd+dSdi4Mt/qx/cUSMgKKKK7kLAjqxO0slIKMH84
GjN2loSVfqrrKq3E88sRMGh2JWG74xLqSjAKhAXH5cSeI2GhLn6FxY0UIArU
Dxu5kbAZNevED18oADqRw904n9iQiyj6TgGX6tG3R8+TsOrmzZvvuyjgEVqi
X4Sz7IueC4V9FJC+MBv5B+eIc4XHCwYoYEsIypO9QMJ+az4yzh+hQN03hxg9
nB3/uWi+G6fAvm3uB9Rwbmgx2JM3TYGHRa8KOXFWfiWwI3eBAt75Q4xv+Hmx
F6bW3q5QoLxNYeo6zms6jePZGxTQnHcpZsX5LEtidxZzNyTSbxkH4Hqbv/s3
ZLJ2w5fHZ+MpuD+NN0eKMji74U4JW6kQzi89FJLTebshcL9D/D48DyZ95sg0
oW5I+GNqbI7ndWFbf0Dqzm54WVv1QR/P81tH0cWUPd2ALucxePC89ZIfn0yW
7Yb/+raMt+D1KawNvMmp1A0flJInbZxw/SO+Cf7q3dCT5yFUitc3c6t7NVWn
Gz4HWLtt4PWXlHccPGTQDfc/aP2QwfsjwdyG+SN0A8eVrddV8P4RvmgiI2Pa
DY6tefrCeH9x5qlcWD3SDS79iqpPjuD1apV8dO54NwjUdZzZaY3rnxXM/X6q
G6Iq1srCSCRsWfPvTIZbNyTdz+9lNyVhQ2Wt/rYB3bAkFGDxAr8v//XVvqy+
1w3JJ1L+qeL3qXutpEIhtBt2h6azZGqSsK8HEjc3o7vhT24Hm4ES3j/13qG5
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
     "]]}},
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6236656955249777`*^9, 3.625826392476842*^9, 
  3.6263497017938967`*^9, 3.626349744557871*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
1Q==
     "]]}},
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6236656955249777`*^9, 3.625826392476842*^9, 
  3.6263497017938967`*^9, 3.626349744590114*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "velscale"}]], "Input"],

Cell[BoxData["0.2930487543164651`"], "Output",
 CellChangeTimes->{3.623665695951174*^9, 3.625826392827346*^9, 
  3.626349701957308*^9, 3.6263497446517467`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"physicald4fun", "[", "phyrad_", "]"}], "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"velscale", "/", 
        RowBox[{"lengthscale", "^", "4"}]}], ")"}], "*", 
      RowBox[{"d4fun", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"phyrad", "-", 
          RowBox[{"xu", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "/", "lengthscale"}], 
       "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"physicald3fun", "[", "phyrad_", "]"}], "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"velscale", "/", 
        RowBox[{"lengthscale", "^", "3"}]}], ")"}], "*", 
      RowBox[{"d3fun", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"phyrad", "-", 
          RowBox[{"xu", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "/", "lengthscale"}], 
       "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"physicald2fun", "[", "phyrad_", "]"}], "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"velscale", "/", 
        RowBox[{"lengthscale", "^", "2"}]}], ")"}], "*", 
      RowBox[{"d2fun", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"phyrad", "-", 
          RowBox[{"xu", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "/", "lengthscale"}], 
       "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"physicald1fun", "[", "phyrad_", "]"}], "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"velscale", "/", "lengthscale"}], ")"}], "*", 
      RowBox[{"d1fun", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"phyrad", "-", 
          RowBox[{"xu", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "/", "lengthscale"}], 
       "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"physicald0fun", "[", "phyrad_", "]"}], "=", 
     RowBox[{
      RowBox[{"velscale", "*", 
       RowBox[{"d0fun", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"phyrad", "-", 
           RowBox[{"xu", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "/", "lengthscale"}], 
        "]"}]}], "-", "basefactor"}]}], ";"}]}]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"rawdat", "[", 
   RowBox[{"[", "nd", "]"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"300.`", ",", "0.0001391089699647865`"}], "}"}]], "Output",
 CellChangeTimes->{3.623665695981266*^9, 3.6258263929198933`*^9, 
  3.6263497019794617`*^9, 3.626349744673459*^9}]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input"],

Cell[BoxData[""], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"tikd4plot", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"physicald4fun", "[", "phyrad", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"phyrad", ",", 
       RowBox[{"xu", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
       ",", 
       RowBox[{
       "xu", "\[LeftDoubleBracket]", "nd", "\[RightDoubleBracket]"}]}], "}"}],
      ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"263", ",", "302"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.0025`"}], ",", "0.00253`"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Lambda] <nm>\>\"", ",", 
        "\"\<\\!\\(\\*SuperscriptBox[\\(d\\), \
\\(4\\)]\\)A/\\!\\(\\*SuperscriptBox[\\(d\[Lambda]\\), \\(4\\)]\\)<a.u. \
\\!\\(\\*SuperscriptBox[\\(nm\\), \\(-4\\)]\\)>\>\""}], "}"}]}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], ",", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"220", ",", "\"\<220\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"0.025`", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"265", ",", "\"\<\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"0.025`", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"275", ",", "\"\<\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"0.025`", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"285", ",", "\"\<\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"0.025`", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"295", ",", "\"\<\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"0.025`", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"280", ",", "\"\<280\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"0.025`", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"290", ",", "\"\<290\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"0.025`", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"270", ",", "\"\<270\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"0.025`", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"320", ",", "\"\<320\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"0.025`", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"300", ",", "\"\<300\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"0.025`", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "\"\<0\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"0.025`", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"0.001`", ",", "\"\<0.001\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"0.025`", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"0.002`", ",", "\"\<0.002\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"0.025`", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"0.003`", ",", "\"\<0.003\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"0.025`", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "0.001`"}], ",", "\"\<-0.001\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"0.025`", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "0.002`"}], ",", "\"\<-0.002\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"0.025`", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"0.6`", ",", "\"\<0.6\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"0.025`", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}]}], 
         "}"}], ",", "None", ",", "None"}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "330"}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}], ",", 
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"18", ",", 
        RowBox[{"FontFamily", "\[Rule]", "\"\<Times\>\""}]}], "}"}]}]}], 
    "]"}]}], "\[IndentingNewLine]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], Opacity[1.],
     LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->1,
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{265., 0},
  BaseStyle->{18, FontFamily -> "Times"},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
     "\"\\!\\(\\*SuperscriptBox[\\(d\\), \
\\(4\\)]\\)A/\\!\\(\\*SuperscriptBox[\\(d\[Lambda]\\), \\(4\\)]\\)<a.u. \
\\!\\(\\*SuperscriptBox[\\(nm\\), \\(-4\\)]\\)>\"", TraditionalForm], None}, {
     FormBox["\"\[Lambda] <nm>\"", TraditionalForm], None}},
  FrameStyle->AbsoluteThickness[2],
  FrameTicks->{{{{0, 
       FormBox["\"0\"", TraditionalForm], {0.025, 0}, {
        AbsoluteThickness[2]}}, {0.001, 
       FormBox["\"0.001\"", TraditionalForm], {0.025, 0}, {
        AbsoluteThickness[2]}}, {0.002, 
       FormBox["\"0.002\"", TraditionalForm], {0.025, 0}, {
        AbsoluteThickness[2]}}, {0.003, 
       FormBox["\"0.003\"", TraditionalForm], {0.025, 0}, {
        AbsoluteThickness[2]}}, {-0.001, 
       FormBox["\"-0.001\"", TraditionalForm], {0.025, 0}, {
        AbsoluteThickness[2]}}, {-0.002, 
       FormBox["\"-0.002\"", TraditionalForm], {0.025, 0}, {
        AbsoluteThickness[2]}}, {0.6, 
       FormBox["\"0.6\"", TraditionalForm], {0.025, 0}, {
        AbsoluteThickness[2]}}}, None}, {{{220, 
       FormBox["\"220\"", TraditionalForm], {0.025, 0}, {
        AbsoluteThickness[2]}}, {265, 
       FormBox["\"\"", TraditionalForm], {0.025, 0}, {
        AbsoluteThickness[2]}}, {275, 
       FormBox["\"\"", TraditionalForm], {0.025, 0}, {
        AbsoluteThickness[2]}}, {285, 
       FormBox["\"\"", TraditionalForm], {0.025, 0}, {
        AbsoluteThickness[2]}}, {295, 
       FormBox["\"\"", TraditionalForm], {0.025, 0}, {
        AbsoluteThickness[2]}}, {280, 
       FormBox["\"280\"", TraditionalForm], {0.025, 0}, {
        AbsoluteThickness[2]}}, {290, 
       FormBox["\"290\"", TraditionalForm], {0.025, 0}, {
        AbsoluteThickness[2]}}, {270, 
       FormBox["\"270\"", TraditionalForm], {0.025, 0}, {
        AbsoluteThickness[2]}}, {320, 
       FormBox["\"320\"", TraditionalForm], {0.025, 0}, {
        AbsoluteThickness[2]}}, {300, 
       FormBox["\"300\"", TraditionalForm], {0.025, 0}, {
        AbsoluteThickness[2]}}}, None}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->330,
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{263, 302}, {-0.0025, 0.00253}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.623660903458839*^9, 3.623665696073213*^9, 
  3.6258263930022697`*^9, 3.626349702044846*^9}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"tikd3plot", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"physicald3fun", "[", "phyrad", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"phyrad", ",", 
         RowBox[{"xu", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"xu", "[", 
          RowBox[{"[", "nd", "]"}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"263", ",", "302"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "0.005"}], ",", "0.0053"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"DefaultFont", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Times\>\"", ",", "18"}], "}"}]}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<\[Lambda] <nm>\>\"", ",", 
          "\"\<\!\(\*SuperscriptBox[\(d\), \(3\)]\)A/\!\(\*SuperscriptBox[\(d\
\[Lambda]\), \(3\)]\)<a.u. \!\(\*SuperscriptBox[\(nm\), \(-3\)]\)>\>\""}], 
         "}"}]}], ",", 
       RowBox[{"FrameStyle", "\[Rule]", 
        RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"FrameTicks", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"220", ",", "\"\<220\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"265", ",", "\"\<\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"275", ",", "\"\<\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"285", ",", "\"\<\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"295", ",", "\"\<\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"280", ",", "\"\<280\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"290", ",", "\"\<290\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"270", ",", "\"\<270\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"320", ",", "\"\<320\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"300", ",", "\"\<300\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}]}],
            "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "\"\<0\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.002"}], ",", "\"\<-0.002\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"0.002", ",", "\"\<0.002\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.004"}], ",", "\"\<-0.004\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"0.004", ",", "\"\<0.004\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"0.6", ",", "\"\<0.6\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}]}],
            "}"}], ",", "None", ",", "None"}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ImageSize", "\[Rule]", "330"}], ",", 
       RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "optx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Unknown option \[NoBreak]\\!\\(DefaultFont \[Rule] \\(\\({\
\\\"Times\\\", 18}\\)\\)\\)\[NoBreak] in \
\[NoBreak]\\!\\(Plot[\\(\\(\\(\\(physicald3fun[phyrad]\\)\\), \\(\\({phyrad, \
\\(\\(xu \[LeftDoubleBracket] 1 \[RightDoubleBracket]\\)\\), \\(\\(xu \
\[LeftDoubleBracket] nd \[RightDoubleBracket]\\)\\)}\\)\\), \\(\\(Frame \
\[Rule] True\\)\\), \\(\\(\[LeftSkeleton] 7 \[RightSkeleton]\\)\\), \
\\(\\(ImageSize \[Rule] 330\\)\\), \\(\\(Axes \[Rule] False\\)\\)\\)\\)]\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/optx\\\", ButtonNote -> \
\\\"Plot::optx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.623660905280221*^9, 3.623665696314699*^9, 
  3.625826393212254*^9, 3.626349702099597*^9}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"tikd2plot", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"physicald2fun", "[", "phyrad", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"phyrad", ",", 
         RowBox[{"xu", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"xu", "[", 
          RowBox[{"[", "nd", "]"}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<\[Lambda] <nm>\>\"", ",", 
          "\"\<\!\(\*SuperscriptBox[\(d\), \(2\)]\)A/\!\(\*SuperscriptBox[\(d\
\[Lambda]\), \(2\)]\)<a.u. \!\(\*SuperscriptBox[\(nm\), \(-2\)]\)>\>\""}], 
         "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"263", ",", "302"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "0.01656"}], ",", "0.0087"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"DefaultFont", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Times\>\"", ",", "18"}], "}"}]}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
       RowBox[{"PlotStyle", "->", 
        RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], ",", 
       RowBox[{"FrameStyle", "\[Rule]", 
        RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], ",", 
       RowBox[{"FrameTicks", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"220", ",", "\"\<220\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"265", ",", "\"\<\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"275", ",", "\"\<\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"285", ",", "\"\<\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"295", ",", "\"\<\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"280", ",", "\"\<280\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"290", ",", "\"\<290\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"270", ",", "\"\<270\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"320", ",", "\"\<320\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"300", ",", "\"\<300\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}]}],
            "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "\"\<0\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.015"}], ",", "\"\<-0.015\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.0125"}], ",", "\"\<\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.010"}], ",", "\"\<-0.010\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.0075"}], ",", "\"\<\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.005"}], ",", "\"\<-0.005\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.0025"}], ",", "\"\<\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"0.0025", ",", "\"\<\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"0.0056", ",", "\"\<0.005\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}]}],
            "}"}], ",", "None", ",", "None"}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ImageSize", "\[Rule]", "330"}], ",", 
       RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "optx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Unknown option \[NoBreak]\\!\\(DefaultFont \[Rule] \\(\\({\
\\\"Times\\\", 18}\\)\\)\\)\[NoBreak] in \
\[NoBreak]\\!\\(Plot[\\(\\(\\(\\(physicald2fun[phyrad]\\)\\), \\(\\({phyrad, \
\\(\\(xu \[LeftDoubleBracket] 1 \[RightDoubleBracket]\\)\\), \\(\\(xu \
\[LeftDoubleBracket] nd \[RightDoubleBracket]\\)\\)}\\)\\), \\(\\(FrameLabel \
\[Rule] \\(\\({\\\"\\\\[Lambda] <nm>\\\", \
\\\"\\\\!\\\\(\\\\*SuperscriptBox[\\\\(d\\\\), \
\\\\(2\\\\)]\\\\)A/\\\\!\\\\(\\\\*SuperscriptBox[\\\\(d\\\\[Lambda]\\\\), \
\\\\(2\\\\)]\\\\)<a.u. \\\\!\\\\(\\\\*SuperscriptBox[\\\\(nm\\\\), \
\\\\(-2\\\\)]\\\\)>\\\"}\\)\\)\\)\\), \\(\\(\[LeftSkeleton] 7 \
\[RightSkeleton]\\)\\), \\(\\(ImageSize \[Rule] 330\\)\\), \\(\\(Axes \[Rule] \
False\\)\\)\\)\\)]\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/optx\\\", ButtonNote -> \
\\\"Plot::optx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6236609070355043`*^9, 3.623665696428834*^9, 
  3.6258263932694187`*^9, 3.626349702159651*^9}],

Cell[BoxData["\[IndentingNewLine]"], "Input"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"tikd1plot", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"physicald1fun", "[", "phyrad", "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"phyrad", ",", 
         RowBox[{"xu", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"xu", "[", 
          RowBox[{"[", "nd", "]"}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"263", ",", "302"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "0.045"}], ",", "0.045"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"DefaultFont", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Times\>\"", ",", "18"}], "}"}]}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<\[Lambda] <nm>\>\"", ",", 
          "\"\<dA/d\[Lambda] <a.u. \!\(\*SuperscriptBox[\(nm\), \
\(-1\)]\)>\>\""}], "}"}]}], ",", 
       RowBox[{"FrameStyle", "\[Rule]", 
        RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"FrameTicks", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"220", ",", "\"\<220\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"265", ",", "\"\<\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"275", ",", "\"\<\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"285", ",", "\"\<\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"295", ",", "\"\<\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"280", ",", "\"\<280\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"290", ",", "\"\<290\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"270", ",", "\"\<270\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"320", ",", "\"\<320\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"300", ",", "\"\<300\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}]}],
            "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "\"\<0\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.010"}], ",", "\"\<\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"0.010", ",", "\"\<\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"0.02", ",", "\"\<0.02\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"0.03", ",", "\"\<\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.03"}], ",", "\"\<\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.04"}], ",", "\"\<-0.04\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"0.04", ",", "\"\<0.04\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.02"}], ",", "\"\<-0.02\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}]}],
            "}"}], ",", "None", ",", "None"}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ImageSize", "\[Rule]", "330"}], ",", 
       RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "optx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Unknown option \[NoBreak]\\!\\(DefaultFont \[Rule] \\(\\({\
\\\"Times\\\", 18}\\)\\)\\)\[NoBreak] in \
\[NoBreak]\\!\\(Plot[\\(\\(\\(\\({\\(physicald1fun[phyrad]\\)}\\)\\), \
\\(\\({phyrad, \\(\\(xu \[LeftDoubleBracket] 1 \[RightDoubleBracket]\\)\\), \
\\(\\(xu \[LeftDoubleBracket] nd \[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\(Frame \[Rule] True\\)\\), \\(\\(\[LeftSkeleton] 7 \
\[RightSkeleton]\\)\\), \\(\\(ImageSize \[Rule] 330\\)\\), \\(\\(Axes \[Rule] \
False\\)\\)\\)\\)]\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/optx\\\", ButtonNote -> \
\\\"Plot::optx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.62366090889294*^9, 3.623665696549159*^9, 
  3.625826393345643*^9, 3.626349702231305*^9}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"tikd0plot", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"physicald0fun", "[", "phyrad", "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"phyrad", ",", 
         RowBox[{"xu", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"xu", "[", 
          RowBox[{"[", "nd", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"262", ",", "303"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "0.03"}], ",", "0.33"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"DefaultFont", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Times\>\"", ",", "18"}], "}"}]}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<\[Lambda] <nm>\>\"", ",", "\"\<A<a.u.>\>\""}], "}"}]}], 
       ",", 
       RowBox[{"FrameStyle", "\[Rule]", 
        RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
       RowBox[{"FrameTicks", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"220", ",", "\"\<220\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"265", ",", "\"\<\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"275", ",", "\"\<\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"285", ",", "\"\<\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"295", ",", "\"\<\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"280", ",", "\"\<280\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"290", ",", "\"\<290\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"270", ",", "\"\<270\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"320", ",", "\"\<320\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"300", ",", "\"\<300\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}]}],
            "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "\"\<0\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"0.05", ",", "\"\<\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"0.15", ",", "\"\<\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"0.25", ",", "\"\<\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"0.1", ",", "\"\<0.1\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"0.3", ",", "\"\<0.3\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"0.4", ",", "\"\<0.4\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"0.2", ",", "\"\<0.2\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"0.6", ",", "\"\<0.6\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], "}"}]}],
            "}"}], ",", "None", ",", "None"}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ImageSize", "\[Rule]", "330"}], ",", 
       RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "optx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Unknown option \[NoBreak]\\!\\(DefaultFont \[Rule] \\(\\({\
\\\"Times\\\", 18}\\)\\)\\)\[NoBreak] in \
\[NoBreak]\\!\\(Plot[\\(\\(\\(\\({\\(physicald0fun[phyrad]\\)}\\)\\), \
\\(\\({phyrad, \\(\\(xu \[LeftDoubleBracket] 1 \[RightDoubleBracket]\\)\\), \
\\(\\(xu \[LeftDoubleBracket] nd \[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\(Frame \[Rule] True\\)\\), \\(\\(\[LeftSkeleton] 7 \
\[RightSkeleton]\\)\\), \\(\\(ImageSize \[Rule] 330\\)\\), \\(\\(Axes \[Rule] \
False\\)\\)\\)\\)]\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/optx\\\", ButtonNote -> \
\\\"Plot::optx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.62366091046784*^9, 3.623665696661786*^9, 
  3.625826393413699*^9, 3.6263497022959633`*^9}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{"orgplot", ",", "tikd0plot"}], "]"}], ";"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Show", "::", "gcomb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Could not combine the graphics objects in \
\[NoBreak]\\!\\(Show[\\(\\(\\(\\(MultipleListPlot[\\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\)]\\)\\), \
\\(\\(Plot[\\(\\(\\(\\({\\(physicald0fun[phyrad]\\)}\\)\\), \\(\\({phyrad, \
\\(\\(xu \[LeftDoubleBracket] 1 \[RightDoubleBracket]\\)\\), \\(\\(xu \
\[LeftDoubleBracket] nd \[RightDoubleBracket]\\)\\)}\\)\\), \\(\\(Frame \
\[Rule] True\\)\\), \\(\\(\[LeftSkeleton] 7 \[RightSkeleton]\\)\\), \
\\(\\(ImageSize \[Rule] 330\\)\\), \\(\\(Axes \[Rule] \
False\\)\\)\\)\\)]\\)\\)\\)\\)]\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Show/gcomb\\\", ButtonNote -> \
\\\"Show::gcomb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.623665696716056*^9, 3.625826393453972*^9, 
  3.6263497023373528`*^9}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"anad4plot", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"synd4fun", "[", "zz", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"zz", ",", "265", ",", "300"}], "}"}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"265", ",", "310"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.0045"}], ",", "0.0045"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "4", "]"}], ",", 
         RowBox[{"AbsoluteDashing", "[", 
          RowBox[{"{", 
           RowBox[{"1", ",", "8", ",", "1", ",", "8"}], "}"}], "]"}]}], 
        "}"}]}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}]}], "\n", 
   RowBox[{"Show", "[", 
    RowBox[{"tikd4plot", ",", "anad4plot"}], "]"}]}]}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[4], Opacity[1.],
     AbsoluteDashing[{1, 8, 1, 8}], LineBox[CompressedData["
1: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

     "]]}},
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{270., 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{265, 310}, {-0.0045, 0.0045}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6236609161669407`*^9, 3.623665696774721*^9, 
  3.6258263935203114`*^9, 3.6263497023920813`*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], Opacity[
     1.], LineBox[CompressedData["
1:eJwV13c81d8bAHAqe0W4RkPJDCEr4nySea9xrWtce6fo3iuKVDSIhEp9EZKS
kZCiZJwSMioZSWU0JCEJGYV+z+8vr/frc33O+ZznOc95zlbfQ/YBa9jY2GLW
srH9/69zPWZjS2MQLQI3kza2KqPNhRmLO8ASw0sxTYeV0Ugac9oZrPZEoUF3
qzJi+Mt+LAcvXOSNuBSlhJL4ErDXRQZh/nipNENRETW42pzAlxhEz/ExjrHT
ckhufuDviSsMQvv5PcaAiQyaVfszv5LFIATyu83Or+NCUcHq18duM4iUxHt7
HDS34svDvzfxVDKIgmp91vnRXdizMazuVx2DaJc1ixARIvCG0C/8z1sZhH6S
oEflLzP8IObk7lmwuyevQjKvOaYlSwduaWMQQnyhv1xkzXHGHQd8BCxFtdFt
dzTHG8efMRXbGUTY5sd/1zw0x/JBt/oSOxiEPW/d4uWjFljPJyDP6hWDqL1p
mLZxyhK/Y7C/PAquCWPJt64j4+jYnKVb4BuRFbc8pMm47vob+xWw373mLaYW
ZLx3yJSjrJNBtD0+abycR8ZkunyIUBeDePaJvthrTcHuTt92dfcwiN6EgWH7
y1Z4kyNlw5peBrFXg3e9fZEVHrIvn9EAd6Yq2arWW2Ev6pF7F8HOlr05kaNW
2JfCtdPuDYN4G1L23lLXGu/fq6D8ug/G95W3quqyxsrEeR62twziXe+0r+2I
NR43+jm2E5y/JiLvybw1PrjnYWEquGK3iaeCtA1m6JrL2fYziFtH/M+t+Njg
SNUgmVfvGIQ1mr2W+M0G66p0/FsBZ2sQVNaCDV5U3jms+p5BnGoj71flssVR
igs5F8AbUzbzS8rb4hjZBGnrDwxCNDOe/amPLTbcNvEnBkw8evZbi2GLV2Vs
35eCCx1zbaJO2OKTm0mZ/AMMojR6jwAryxafkiwUfwGW5m75IvnaFu+T4Jv/
CzbOeC7NPWiL15EOvdkxyCAqFw62Pftui8+K6qafB4sirm927FR8Tui5MGWI
QfinHlzDJknFqRzf+NuHGYTy0hqfqH1UvNrVxr8Ebo3Fk7stqDgst5Rf8SOD
8OzitvpoRcU2uiz+eLBR0F3SkBMV8+9f4TP+xCDCf3Ldzgqk4hjtj3xM8JOz
xTnxIVQ8wf6MLw8sZbYtzjmMituzzvGtgltSOLIKI2A+LzbwPf7MIK786iSt
nqLixYx53u/gr3lmxwXjqTgo4B2vxBcGMeob8WVNIhWbrebyRoJzryer/pdC
xdXtcbwF4HPvDTt1LlKx3H/+vL3g80V6P2ouU/E6dWVezREGMXzg39P9GVR8
eJmf1wd8ZoO+6dUsKv7S+pMnDeyzqN5dkE3F9le6eTA42p1Jzcil4kafKp4p
8Ou4c4WheVSsqZbBs+krg7AtWYvl8qn4xp9oHivwVxLjxJObVBx7meApAXf9
jBvIuU3F016yPO/AQTtcd3wspGIvFU4e7lEGESMhfH9dMRW/Whzj1gUHLjc7
8ZVQsVFzB3cg+MjG9N+z4LKLZdxXwEv1/x1uuEPFmzwvcjeBteV/PAgppeJk
5cPcs2DlIzb7F8HL8zTubd8YxOdD6jlBd6n44LPd3Hbgd1S87xH4Q+pG7ljw
bOkO03Ew2f0fVzlYnHQ7cQX8WPEz1xBYfpvX0i+w8u8mLoExBsHlkxDzHJz1
tJBrD7iVhthOgHlTkrgOgBdUfWPEwFFuoVxZ4IAPVk8vwHzG5KlcbWBbt6gH
ozB/l1lNrkXwZIGPgQy4FYtxKXxnEMdqThrow/fqJS9y0sC706yztGB9ilw+
cJ4F+8uZGgoVUTFJroHzAVi6qeBHG6xv/K88zi/gM4V8Wf4FVDxff5pTZJxB
8Pup7BuGeAQmBXLuBbN7POzZDfF6Q7PkZIAf/KXrHIZ4msiqcF4HBxW0OaVA
vB/8FOR8BaY9Kd94DvJhe90vjhVwd2V9hA/ky+VzvRwqEwzizcRZeynIJ9bW
LI4kcPYR9x3KkG/9ym8HqsA3Xrm1l6dBPLVEH3wC0xf7eiQgX3nNU3x3TzKI
/d1XhtLPUTGD2rE7APyH519t4Vkq7nPlFr4ITnw4lJcD++HGwVN4DLzXquOy
ZgwVc0biq6I/GIRj2PDprqMQ35PLoQR4rlbL1QH2k96lyI0Z4It3lSP/hVLx
64chUeZTDGJa0+zSggcV6zwtpIaDO9OZM3dcqTi7fUThOvjMxadNxrCfgwc9
++bBSYwrSSTY7//WOOy6/ZNB3NVP2OuuR8X+/Gm83eCTEmVN23bBfhZ7+WkF
vJ+vldKhSsVXFc3TnKYZxKalKJXGbVSsZmPwY90v2O/fM+RN+ag43flokzp4
9ba0mBQHFf/xrrrmDg5x2WV9Y8UWt4TvJD8Ab9hyRrr5iy32yJQt9JthEB8e
9taq37XFySN8Po2zDGJHXHbUOS1bPPPDQm8K3LBDdYvndlvssnBWSGqOQXxT
1Fs3v8EWy/KyNTDBL8ZnvQ7O2ODHO+ektv6G70+JeccstcHfowd6T84ziCra
+RP9ojY4LPyTZzm4caNBruQ/azx3YHRsCKy/sHhB+Ls1ZvOYXjZcYBAH3yx0
ytVZY3G0Tm4ZLDq+tGvY0xobr1WJOLoE9fBg3If0q1a49a/6v0JwvITC1N4Y
K2w9p534Fqz05BdsASvs8hXl6PxhEONi3z9c2mGFw547NM+Be9fMBLLXUXDW
+WNizGWY3+vubUadZCxzJvZ6HrglW/m3VwUZF8ScVXoNPr9yrHL3RTKuCE01
3LkC9eJNl5mYPRm32N4M+AFWzzF6HvbaEs9s6Kja/49B3I7+MfwMW2BythTN
dw2TSPo7uX5yvxlu6Yp6mALeZTQhMWFiho253knUgm9czTEs32KGd7P++7Bh
LZPY72gXnNBrihUtRH2awVxt7w1jDEwx15zAQUUOeD6QcjR7dR9uorCfmuJi
EpqtXE8E6Xsx+vvtbrQAkwifShdfO6uDQ1abd94Go1tXFF+m6eB09lv3usA/
zaawsZoOHufyrlIUZBJ6iO2IZrA2Thftr+sD69tun9Dq34XHVFs7NNcziccs
xjClWB1f8i76Pi7CJN4tSm4LUNyOvzYHy9ElmARLaKmjYb8ginD5aqO4nUlQ
7GixXzv2ouqEr26O4EWR/qL9XMZovvprYCz4tPL4uRFjY3RUbPREP7hz4Xt2
XY0xiu4eLTsnB+MZLxh/v70PnbAaE/wuzyQOnQs4+PKEKUogJl4VKzEJt5wv
TfFbLVGm4i+bHTuZREAhJSCOn4r+mNUI0MH1LL+pJCUqcguIe5EE7oy6MXzc
jIqk8oXJ4+BDu/zbN8dSUZa0pmmxOpPwCUswN52homzBcAMFTSZh0Von/a3L
DuXNzSnIajOJbomF5pwYB8S2oX7UHhxpubHB+qoD8tY4W3AKLBL67dJQuQPa
GiYm+xk86lH548ZnB5T/TXvzDR0mcWGf1PEiM0d0632k6BY9JnFN33DxOLcT
KnyyyCZtwCQGOd52FjNpqLoUfbQEd/96+SQ7noaaMuLxUfB3skV2yDUa+swQ
PdEHDu+QIV9toqHNW9X/XtzDJO6/u9CqIOaMrsYF/eY2YhIXLxe+5il3RgWh
Zb26YCe2L8z0p87ogevv+4Hg1ur7HAs9zqhb4zSrCVy+oGG3b9EZCX7O/XkS
MYmHt2b3zBq5oHjjvu/zBJNY5y+Ikptc0BW1TW1ye5mEcklkXlyvC7ol5V/k
CDZ35qVbjbigxplfgZVgbW/NfT5rXdFqvsBIqDGMR9EJPINcUeRa06GRffD+
7cNrL5W7orM/z9dvMIH1eZXZ3lHnitI/dGcbg5eSt9T0t7miyvve9Dzw5bD+
0we+uKIpv5h+uimTuPo6eIgh6oYCmu53d5sxiTtXKzW/hrqhkB+Oiavg5n0Z
apeOuCGG+DxSNmcSR4WsCsXj3FB0sN7dOPC6ae7rBZfdUBp/fYK6BZOQVpVN
e1fthq5oexq5g8kfFVQJ7IayPP/NJfz/uaJu1fHnbqigYq/vMDh609ndx9+6
oceOLXtSLJnE3YCrmsm/3RA+HjRbA373YNaqaNkNNd3mLvkKlg7U7c1aS0ed
i2SSIZlJSM03f14jTEcj2Z2/JsATfLyig0p09L2ZUUSiMAlevs+TJTvpaGpK
2GsfWD3ty0sbbTpaIhxfZIH1nX9FSxB0JPi1/7alFZMIfvpUoNKBjjYIRntE
gC+or0youdCRhK606A0wpifHxbnTkWyiR9wi+KXUp9JCfzpSrFzV3W7NJIrr
tvMfC6YjtQ/Xp2zBXIu1i7IH6UhP9TO9ENzwfiFqnkVHhrTTIj1gd4Nja2Ui
6cj45Pa2VXC2Txzflig6sihqPqlswyTkS6KSZ4/RkXVXoA4NzGD2xOacoCP7
P1w/4sACPEd6N8bRkYts8c27YFFVsUTmaTryjZhYz2EL+yduzdZrCXQUlJv8
XB28a63TyqFEOjr4XPWEO9jbco+21Hk6Yk2/0joHLl/e3ZyZTEdHJBkT98Fm
zZ3FUxfoKMZYOH8YzENGLyVS6ejUgUoXPiqTyPs5oCCRRkcJ6Q5CumDp4HXd
k+Dk+rlmX7DmPPuLqxfp6NLolZiU//9+YKu4+CU6+k9Id9dj8HrPiooQcLZe
//ev4D31S9fSwfk+UXnCdhD/PeT+y+DCJClnQ3Dm5KBPMLj0fq3AfnByhZi6
CLhywL0pHXzhnbz9RRjvIcdq9BMw3WCq7SvMZ2BT0MhP8JZMjbN/Yf5sOq+t
t9hD/EiBosMpdCRns/uhDbhHYjIqDb6XHJgvcwJcuiL7SAjW49AJvqS7YH2p
plr3JDpKv3p4dgBcOeoWd+QcHdWUDbrzOzCJ5++i1Lzj6WioxazFAKxtO9Uu
foaO1g6X7zwAfph/1vMaxEtxQSIzC8ytLvDrB8TTWujUmnbwqL19kmAMxENh
4sDS/58HbdNcOQrrhRzfKDpCPboj/rEmgo7qnOuNXMD/cZveMYF84jyXKvwQ
/PNYRGtTCB3tyFuMHgWLc21QexxIR9RHPiNiTjC/Ay3vj/vSUdbYroeHwd7t
XdsYrnSE2XJkboED4qPv5zrCfpLgTOoBv0FVj67ZQj5b9rtr0piElRedzm5K
Rw4+e1t8wBFb1omHIDo6GlWy8yLY7mLNyRu76aixOGbNNDhfpjgxRpWOnHi3
Ft11ZhLfInpMv4rQUfS2JOFBMMfQrY3NfHSUqz8bze8C59v+k3KH19HRWEiz
9QHwCEfKFwT1IKZj/6yiK5y/o/ufpfW6oRtfut1dwPflVLZPdrihlr8GLQng
F3+dXUnP3NB6FcHMUbADF2YMVrihW8mVRrfcmITqz5thO5LcUNst6aIesNWd
PwNcsW5oqu6M8Fo6k9ANev72QYQb0vtBG/EBv+bRT4/1dkMvrP8mbnGH8691
vd+XXW5oVtDkTZYHxLNWr3aqyxUJ+nOJPwc7fhTjftrsipRr2mmz4BG/H4cO
1Lgibz+7foonk/hoo21vmeeKXj70/LAMnrqsn6py0BUVekd98vRmEkzZLMHi
Zaj/VXu2nQe7TtyZ4JtyQUO8bH4Pwep576sthl2QaFX8iJAPxDdJoY761AXF
8aR/ewIuC7Wyzj3tguiVZT+2+TGJ/mN/rCnsLiiSi6VmCzYL/KDhMe2MLrlr
HzoGXpSIlKIMO6NWzrrpHvCmpcDU2jpnpE1vmz3jD9+7Q8B1NsIZCa0bWRoN
+H9/Uto/+ImGnjlJct4JZhJjDk+EC/Oc0GrmraX3YPf+GN76RCekN7TzB+9+
6C/a1x0uYzmhskCz3hDwnP5ln+0mTijrSHi+cgiTUJvU7ff96ohYmS+NSg5A
PlRcEnHd6ohkBuOOFIcxiY2jSxeqYu3Rcf/xscLDTCLwbX4qd681CoycW+4D
714ty03OsEbUc6vrOSOYxEHm1guj7tZoe6nIbn9wWPzpL5u+WqH2Wf1EmUgm
8eFCo3vhLAVJnD6vlHmESfx1SbqdAkWt8oZKSFI0kyjhLA6blTZDY0NhEwdj
mcQJnvnBq+MG6NvVU01B58H8SVSihwe/Fr9ka/sfk7CvSF0XVLwXt1yUaD4G
vr66d9O9T3txHf91/SLwZumTcu8kjXHRmlI59gzox+xP9D1NNMaxU81/K8Ed
/HXMH0H78M6WpULxLCbx7KpJ4YFNpjglwodtKJtJ9Ck+Fl4NscBnpr9F8ObA
/nI/VhmRa4GjD4RN6IDJM6OCjV0WONDnWF8qeCwsaeitriU2sr5SujcXzkPN
v0LT7GQ8tb3NpeA6k1go7yhNv0DB1r3q9w7mMwnPNQEGrbE2eGajjnkGeL/F
aekDd23w1QCDwWfgO0O/RQbe2eCP86Y80jehXix6URQ0bTFLku7TBt6U+e8P
/aMtzvA8KyxfAPm1vibxdCYVj4y9Yw4XMomZ57dd37+1w4kaw1x8RUziyKjv
r9fjdlgteiRHB/yqvbC2ZMUOH+H72XYBfCIzPZxL1h7zqq3btqcY+o8/k2q+
B+3xznC17owS6A/zZStOLdnj6JVTmvZ34Tz+crHv9rIDNtKmHosDJ5e1NIkI
OOK1oZuaKsDLLc7nXTY54uSBh05CZUxics8pKaahI86pnTz6ArxaM1vQfcwR
P4miYbMKOC9Uvyrv/uWIz9yT5Y4EFxfl1mv+c8SW36epBeBQyWnOdQJOuNvl
/Oe19+A8+f3VSlXRCX/RfcLxFCydaiD2n7sT5pxXsjK4D/n89I3InXon3K66
kB4CfkS21hJuc8KpAU2DmeAV60lR614nLPHG89Ai2CWyKct03AkrPbh8qeoB
k9ipNuytI0rDUxPeH0bAjPlHm8w303ClrNp20Som0SXdU6KiSMP6l1urWOC2
EPamCAMatmKt9O+shngaab5c9qLh9SXtW73AXzLZxiqCabj3038hKeCv4Y6/
9Jg07GGnuTwJXskI9GmKo+Ew9aAtJQ+ZxN6+9kvNeTSsGawV/A6s2+rDJ15E
wwvX2e9xP2ISn446Ze8up+FYoWzjILC5runNpToavjj1OmB7DZOofh9y1K0P
5uO3eJYKvvLdOmLwAw1z9m+5HQPeGdpQqveJhmOeho32gg2l1I4fmaBhHZ2r
nOyPmQRbkMxPt2ka/lVSL68KfnUo3lr8Nw0HpvMHnQWPbF3rLLpKw1t5tBLu
gbeWVs/S1jjjgeP0wkHw5T4+bSanM7YLKvmmXcskOJnm3iqCzph/oIvLF3x9
wxmFl8LOuIW6pJACdq0VtDEVc8Z79C2CR8Gveo671Uo74/myQ+dE6uA5ttxR
s9kZ35P9r8gI/LjlnWTKVmd8MKOhNQRc0Ksvrr/dGcsLjI5dBXf3RK2vl3fG
n+IEeJ6B5ctvLoorOePseS2ln2AXu+YG8x3OmHbA3VK6Hs576SZjW1VnLPzx
9H5z8LHj1jGqO53xC8c7ieFg95M9QZ/VnXF8W3fxdbBAT8tCqKYz3mv0p63j
//+/I2Pz613OeLly6/gCuGz3o1fc2s64WsGSd3sDk/C9998fko4zZmYzlKng
TJPC9BWwinAGOQY8pJoRX6PrjEfP4pAi8LnGM88oes74xp/RpF6wqJC7xQOw
+yHBO2wY7uPvlXlmweIj2h0q4KWJlSWu3c64y8VjwgUcxvtZ8P/Pk1+e4TsL
nlv+YvD//zczLt1xD5ybtD7i/+9nf9hDGQS3RHvmP4Lx63b8PcDzBO5Hth8r
/sL8IvO2JWuDxz3xHVGwhhi51Ae8XP8ncS1832Qi88UFcHDsReNW+P7bqxmT
NWCdx6de+ML6+IQ/4R8Fu558ubkH1m/j2DcVkadwPn5hqEvC+va5C1kbgXdF
iM5pwfpf7NIJDQHX7853kYf4WJl5XrgKLtx73O+HojPmrD17txF8s19HIAni
G3Or94dUI+Tf56QtJpAPOpLLAuZgnknzKB/Il18XZNXCwUfvKzo6Qj4FHmGF
dYAD1OJMHos6462TmSkLYKW72xxVIR8HvJ+WyT5jEu/Dq19FCED+ktf/PAYW
C9n2O54D8nNT2SGVJrhff6CcLZ6lYfG4HGN3cHjwiyr3KRqeHkkWSwa/0uN7
OjhGwwWlB2onwL1GNzwsB2lYcI8S151mJuG3zlax5RkNj12XeP8ePDXP8ewb
7N9na7nv8rYwiThPI/W3VTR8tGPUPgScUdB7fkshDX9yu5Wr9BzO5+kRb1oC
Ddc1XGa6gjNKbZ+NnqDhq9tOmySC21VeiJhG0jB53Gd8DJyqcT75gD8NP4ja
olPUCv2Yy+5VLyMajs/IeinfDvVLcUx7eswJey8n5tHANap1nb6DTtjAOyo8
Hrz4yGf6ZpcTnlZwkRwFf/0Z+OdijRN2fSgWUNAB9/uiv783JThhlb60ZdmX
TEKO//F6Hkmox/qxnQ7gu8uX+g7wOuGPOYfyT4Mnyx455P51xFcCbCy+gFPO
bK9gDTri1Tm+9PxXTGLbWcmoD7mOuGtDwo6tr6H/keteaZVwxG6mvzdTwYuM
NYbxXI54JNJP5CT4/baRe+LzDnj+HVoaAB+vIPvd63bAUnmLLRldTGJHaPRQ
d6ID9lUJ8V3fwyQGSQprvv20x3Mm1pn/3sB9KLf1PivbDh+PrE1W64P707ue
tZ/P2mHOIqVYD/CPjWduKh2ywxJ8nEG14DIFR8t9e+2wYVeD1pG3EF/j8VO3
v1BxvIf666l+JqH1L6PcYysVkyI3cA19YBKN9+54Hltnja+OfOjiGWAS+4x3
FXN1W2Fxh1vZ2uDecxm/3a9bYVF1bc0L4Ae5n47777bCIuM0jz2DkO9a34rm
QihY0DPrftYQ9FMOzzvPNFnidWZbvZ0/QT8muiw77WiGf4ntrHk9yiRq2Rie
AaJGuOq42aaKGSbBb3rs6cVJDkSW0GANgHlFlJd/FPCgj5XSz7lnoX9fOvA+
3EMA8Y5NM3zALy1bnYP8RJC3/bUmkTm4fx2ws2h4Ion4FKYPRPyG+Fed5NSS
3Y58Xmc+1l+EfmPoxdXbYhpoPuSMUBDYTczzXsMpDZTMccj/Mngxvvj+oZ8a
qFrfRHASXJB2RuO/55qIv2DKJ2cJ8uPWvrw+lhZ6GLWPh+0vk/DgftmycF8X
Ccj+cG5eYRJrEqZPk/oNkf152stpsJv8w7Y1Wkbo6iw23rjKJPz5qVEBqUZo
c9Ml1XDwVIfAarIJQmoBemu3/mMSTqllKbKOBLItPF0Ww8YiZF+lupiU7EXp
Qj9ki8BHRSRoj3r2ov4jtMwe8KLQ/l0fl/cibwulM8rsLCIyZFerpY0xYnx/
5doPbrbel3XkhzG6uEOKQ2sti1g/nm06uNEE9V0+He0F9j5cHeG21wRJLU/+
TALXzWm8OBNggvJf4PefwEckciKHS01QZWgAdLIsorvTyDhf1xT1lFfQJzhY
RJFUyncBQzMkISHVJc7JIgIJpd8a7mbIPfa0mTGY1/V26Uq0GRqh0jQywZ7f
MtnOPzRDc7/+cppzsYhLXNYoQsUciWmZV+Zzswj7yKFQMocFOnr+6PsusOMk
0T0lY4EGPhevYedhEZW5Nxzl91igWxf5HbzAN45R6qyZFkjrZ9esNC+LOFUe
LH2kzwJlmK3dSAE/I1rs7k5ZoOUcLZNoMFnNu/UwpyV6ZvVfej/YdoNHUbWW
JbIvcde+wscimPrzL/+dt0TV7CkeTeCV1z/u1+RZIilXfHYWTEn+FLS2yhJ9
4trWZ8fPIny3ULHpgCViBHyLFBRgEVOTh8mn5Miot07iuiE4O/zvXLUOGemJ
kp8fBJe3jl2MNiejf42lpA6wcmm7fVkQGaXIsB4lCLKIGvFPfk35ZDRz5ObH
arDx3NKH0AoyonX2co+C0ZO7nwrqyWjTCV1XEyEW8fMSz7WnfWQU+yY4LhzM
tNtnV/CZjEZUsorzwc373sWTpsio9MPyEtt6FjGeWrm5cC0Frd+ltk0dnH1A
+nuTAAUdTvIie4FFnAYPMkkUZLC7MasezC90sjNSiYJy02YbJ8HpRmPNnRoU
tGZs+4S0MIsQNg5QebibgtqvJhhEg+uvUiI1LShIbeqRXzG4I2dyqsWGgi6Z
jp/vB69Ou3WMO1LQfLb0Ay4RFiFxLVMl142CXOesBnTAT2/f2fXJi4LqKCfW
BYLfb05nf+BPQTI3y1WugJMtpZ3F91PQmT8fHZvA/6wHG7hDKWjMTuT4LLjp
zrj/eQYFWRXvK9i2gUWELsYfzg2noAq2iJd24EttvyWMIylI1OX271hw24Po
45FHKeho+dtNFeBCW9eXBtEUNMDJYzYM5vhoPnrxGAURnvphgqIQb1XtrqMx
FHSr6sBVQ3D25KLpLzCXQE7DQbDhwuEzf8G+NxQbMsBPFr6M3QDXaT+obwJH
Sbc8H4P3ibej+mmwj+Sq42sYj+HZUbdRjEUEF4U1uUTBes7Q6izA78Y5tpw6
QkHbEz7XHganzlVnWUVQ0AnpsNo8sFKSXN4jFgX1ly89fgFWMN5xoOUQBWma
nH28COa9f0M38iAFJfevf7xdnEU4h/vubQ2moNGD2TVUcLKkeVMdrC/BrlgT
A1bbo7Ts4E1BWVfuPyoC9z56NXaBTkFzSuhRL/hvZ+CVEBoFFdnTHqqQWMS2
lJr7ghTIh2+fql3AYjXddX0mFOR+LLT6DPjLs3b5fUaQb7fOVA2A2eNErXjV
KShEb30VtwTUKyX3lABFCmp6ce2BFtjmy5stgTIUFPW78n4yWJLztbGrEAX1
JhrdfwQ2e1MebcUJ+bW5vXIEfDAoMG10mYw+m326t0eSRTDyxPPXfycjcoZQ
xSQ4RWC0ax/sl1sq18olpFiE1oLRy8h7ZLT6RL7cBJxR8ybaoQDu998Ny7LB
ryVuhvMlk5G0wcFSK2kWsX9Ko/OkExlFdi7cOQrOYBZ954X9+9rv9J1bYHmO
yCFjPTI6k5xVsgx+Xjm++FiSjCYHW4tKN7KIvod/lt/0WyIzlmNRP1jzeRR/
z3NLlMf5sXDdJhYx6yV1ILbaEjnuXLjtDq7XeDvx45IlqouVK+DfzCKG7F8Z
yVhYoguyp24c3AL5WDz+3fqWBeIsfOOQDfZqvi5QkWyBYpWVOF+Aj+eUVNcf
tkCHNV6H7JBhEXuiFM2G9lkgOtqsNQ5G+U8TzYbMkRL9cUvQNtgf6kFrbdeZ
o+ZLMxO+clBfjbyrHaVMkZG4We4lMOVjzab4JRP0KDOT2ghev3MgKrrfBJXm
EVVb5aH+HhLfXn7FBF0uSznxEXzzw7NyTwET5NOuLOypCOvlfqXn/IwxWmH3
03HdwSLi5fuYo5kECmtc/+Qs2EQ2IS83gkBDpxosK8Hsdm9T9ewI1LBWyoNP
hUUIrqdFinIT6ARH1+l6sFRTf+q/MSO0yo26tqqxiJC407onLu5B/4SkD46r
s4iK9Q9u+D3XReybe24c04H55zXw3N2ugmRK/1EKwQtL3frVF3YgI32V+W7w
aaH9CVPzyiiGdpasrMsiiCvf/OfblNBiiu5sP9hu8GNSDksBTf27ZqKzG9Yn
RuH+vtfb0MAn/2/TBizi0/uLbfv/24D+Hrp4ceMeFvE5Ts+q4LgIklqtN7AA
i+blJjb5CyNnKVLadbCgoLL6yQOCqNu+Tc/GkEV8N6y8ItTCgdqeqSbdMWIR
l2seyccyvhhVF8yrBO5lEe1SO4JOmfLhuW0TiVfAM7SvT6juAnhX3vBoE/iJ
Blf9eoYQrshqzZM1ZhEGya/5ZJ8L45LULNFPYMlHMnMB3WI4N8pomW4Cv/9v
LMAqaxMemNd0PQ/e0i9AqTi/GUsfVqh+DJ5xe7TkdmwLzghbz5A0hf1v9Xf6
cYkMvuT3+UsfmBr+L2Ff9DYcbx3fYWfOIuZi3S0nf8jhpvZoxTjw5cPDL/Vd
5PFai0NnK8AZFBFq5lN5HGvsgoQsoD4Hq6+euqiAo3WV778A37nHd3VOTgmH
bX2VZU5mEY8HaNdOy6jg0tzGhUgw5WhoBuOYCp6Qfuh4G1w4UTzo/UYFB4vn
CXJQWIRHaKEfJV4V+/KxTjWCxbx6D+weUMNOv8VCDK1ZxK+JHgf2UnWcVO6f
ux+sNawfvPpKHTfsv999BRwy5Lru/C91rDhENZgCz0a3Jtlra+DllvP8121Y
hPYO33sZDzWwRtx7ogNc61W2TuitBg40UIpYAIt1ZgSLzmvgzvKWQVtbFuF/
YujoC01NnJ/BXs5GhX4pxcF55rYmfmtP/aICdnhsavepURPzC1wnuYLR55p0
ryFNHBG3J/Ye+NqFr3t4RXdhi5Ajdr52LKJa7uisZPQuPGXwY/aZPZzHSr9v
aWhoYdl5A8Vp8H5qN88WMy3sUpHkvtGBRbQktJ7KcdPCT7crNh8Gf3pWX29z
SgunC/hdlXNkEdFpSy8TXmjhtuf32u3A/ArnHdYOaeHVOLZ/x8Frhb96CP/U
wsHzOUF94HvWqiOjQtrYYLhfL8GJRRyTnPQ6aaWNGZkKoffBm/2G7TPctPEt
h8gbw+DDnyMlzYK1sWDrBl49GvSnxweHfE5p432nfI38wQF+UTGvU7Tx0T33
WGng64lfnN5kaePPFTYfxsAPdtQt5d/TxqQDOUJiztAvjn7jOlinja3kJvft
Bdde6d31okUbV2UmlmaC6acS0x3fa+Nxh/6PzeCWbVvPH/+ijTcLKojNgC0i
xRPQpDY+d6rpONkFzt+VRyJpy9p4YMcH/2iwf9jN5Lp1OljjzS9KCfjs4bQq
Jr8Ojj/Bves9mJZTTK7YoIPfK2yR4nWF+uKc2HVUSgerdWmz64OrRNo7O2R0
8Oloq7H94ChDzo5ieR3cL+vXmQnuM+u32KCig1VeRlW3gUtz3r/i1tDBsZFp
OUtgnZdXjZO0dfCbLYVnlNwgP27NdGbs1sHKbfUHXME/dT2ktA118AlWr30i
+ImOyGMvQgd3S0/srgHftrU2l9yng+Wb2bd+Bx/QILv5murg6DAJbkk6i3ib
ZHLewFwHd5J2/rQAx75xsC2w0MHbn5r2HQXL6Pga5Fnq4KMh7vVF4IU1RlKq
ZB38YkP4rX7wdvajyVZgmfrE89zuLKLhd57mP/j94cA8lh54oMDyrim4Teih
azA4tW9Njgy8f3PNS6j9sP+sPPLTzHQwy3dEoRU8baj5/oqJDm7h+yu4CObl
NgvXMNbB0lXC8woe0F9Zv5bxRzqY4ak46Ay+G654SW2PDm7iQk0J4BsfCyIv
6ulgiXtOdx6C+5euH7+gpYND3Q5e+gb+tD2MJquug8XvZnqbe7IItkbrr5sh
HiG0CvMj4I/v22XiIV74X4taIXizFeNvIsQz2H5umdML9sdNnYAQAR1c95d3
RAdMxv1eFpw6WLhga0cg+Jh3T2fzqjZ+vGCT2QJ+c5+hcWMK8v1GQOw8WJEc
xsE+qo39yDFB8t7Qjwy8MVs7qI35c4q148Giws82zLRpY0/jdd2mPjBe2P6E
C9e1ceWEVE0EuOnldiyWro25rmjkFYANvyYdMTunjSu+eYZx+LKIoOEXx28d
0sZrLtTwNoOVRXieB+lrY5rO619z4MWtH45YqmjjO8Oj/dv9oD64dky826SN
HTVFC8+AN4VVU3jZtHHB27B9Jv4sIkkq4XfDEy1cZLOOEg4u6m/8F12hhUub
M+3zwXGJeV+nrmvhyvtNPmwBUC8V5m3ZT2jhhlSp2Dqw97UN+V91tHC/eUud
VhCL+Cp2aNUtexf+0EBv8gM3lN6emU7YhYe0f3VcAsc9m5aihO/CX2U3fpgG
d6f/lrW13IVn/jGXSoPh/Pmd1XhnBurjo006ciEsIkvJ/bC/gSYW2nnf0BG8
91pJQpasJha5bWF6GiygUKx8g08TS6aHO34C1wiTfWU/aGB5Rhsr5wD0T7ov
tdcf1cBIMaJcLJRF3Lqw+lSrRB2zMl4ocjIgP/j00558V8UHreq4NMHMpYp2
jipVHMBWOuoB1iad/rs1VhW7BJ+/VQWuISehz2Kq2EiPLBPAhPpg1eR1A6lg
3v7npCYWi7hyqm5ywwVlnE96xnkqAvI7QOarPUkB91ytGVmJZhEXimPs52Vk
8ORuZqTqMRZRZm/KqG3fgjkHFbk9wPJxug9qHbZgPdmMHXXgd+0ojx64GWeX
R7KiY1iEuoTVJdOUjTiwdRfbwnG4fw1cTz08LoEXl+5KT8fCeLLPeoQ+CWPh
nIC7W+Kg3pAmG++HC2NlYhOyBR/q/jbRyCmMPeKTfcvAc31MZQW19bhR5EDx
wVMsYuTwuK/3OgF8foei7vfTcP8XII+JxHHizR759p/joT97rR1ccXyuQc3w
Qa1gAuRP1CSzV2a2wXBTy3YD8GpPQslC868G98Hv85fBnDVrLVJVphqyPDSu
mZ6Dev6pzP9l7pcGcc8nX4oSWcSGt4eIq1FXjeSNuq3egJ1Ok/2/02qMtDeP
VLEnQfzmdq36R7YYOQ5xnXMDr29VfcU12Wt0ydNWhf88i9g1ZqmlMPPFSNBr
6PChZDi/39e8VuedNdqMpgevgfVSbDQUt80ZqW5ZY94Kfvdv5uc73d9GVsNy
klsvsIguD6+4YPcFoySv0Ppu8LnGsZn1SX+NOL2XOXRSWYTQ/MxscC07WvGW
+m/5IvSHNy7//dPGjeoE78goXoLzMtTCbP1OHhRdZ1DiAG67FveL7zIPmid5
1JeArxol5Dxy5kU/X13/4nIZ4tEtI/67hw992iOnXpUO/UOPR01chiDKG6+q
+QhuZ9PfuXdSEHlmmO3jvwLxTLrHPWMkhN7PBtH8wDtC2sRUPgmhnpKSGOGr
8P4LKhKpyetRs4R6W+h/cP/4WTE4d0cYnWl5Yp8JdrwiLHn9pTAyPmw30ARO
yT9D7pgSRg2drJ/SGXA+SD5JLN0pgh7GV4m1g63DvaiFd0RQpJbZ9d/g+Ldi
QRFtIkjrc5/i1kyox5IzBzpGRVCF4aLBUfAGkw+5IjIbUPGcvq98FuznJ2rW
2y9sQMH5HRN24LIV/e/mhRuQPNU94ji4N7GodOnJBpR/5/i5XrCCsAmLf3YD
uub7pOzUNRaxr7j6Ibe9KLrw2vTvUDbky1hatNKyKAoJzdUVzGER4mW3lM2F
xZAF70K4IfiPbOF/03JiaJ1J0eQ1sHlXVNEPazEU85B3yCUX6sUMZ2pVhhhy
c/STOgemGluOuZaIIb1ftbSH4OF/SUJXasXQnHJop9h1uL80xfm9GRBDB3M7
n3SDU14wn9+UEkdkA8UV9jwW8c9uJnm7kjhS7I/drQG+mLxx1UxXHI0Ia1am
gsnuaz0i7cUR/Wz6TasbcF4vKQUVnBFHett+DB8D6z62/O6aJo7EsenGO+CX
o/LctdfEUffifDpPPvQLx4i0c/dgvIOu8S3gu8onXI68g/F4Kht/g90SBywf
fhZHnLd5/22/Cf3NHsk7ZRPiqHG49shpcHbxOEfbsjjKixF9UAl2+D54c2od
CZ2QDJ3+BP6dcPDPa34S2u2weT9xC+7TX8gXu6RJSHw6suAQ+Li4p8XMNhKa
S+78lAu+ZpU43qtEQhUtsW4r4In0PRu+6pCQov4XyuMCFjEWIJlCsyEhzrcG
576DE3d6WdxxIKGR8PQmidsw3kzrRIcLCeXdNTU8Ar52Xqs4whfmQ86Nug0W
CH8hwx5EQu7f5qvegCmsO64eB0hIYmuRmlYhi5C7+o16IZyE5uvZDviBP9pk
dfkeIaFeN9fCS+C7VY9PCBwjobR0Xplf//892f/daBwJhWn4ucsUwflOO95E
OktCVq9qM2zBsQOVyrLnSIiLO1S4DMyvJSP94gIJ7nNb5N6DWz+f2YfS4Htr
u/U4i1lEyV6O0PRLJORySM/bE3ylMOznt6skpGI5EZ4E9o72HfqWQUJssrkJ
1eDTzyIOvcwioaK+teWCJSzCxmc5lZJLQjEV1Y364GNzIc5fr5MQNWl/X2DJ
/+9zeXuCbpDQdv+N45fAXGvc/3Tlk9CSYedKA1j8kAdF/hYJvSKdEp4AHyT5
j/sXkFD+Ly050h3o3/ZupKXeJiFyQZbVIfBU2qRhcREJbT5p7X0NLLVGQz+z
mIRmXNgOPwdvyHGvjCwhoRbN+wmz4MvZasj4Dgld4w+8tqUU8sUgMGoZzBiV
KKeAuR80LhWUkpDJk47GI+De0u/56C7EJ+tE302wvj5NrR08Ga4x3gm+doRe
aVpGQk+sR1b+gmOvF1ZXgtMV/hNWvAv3g8mxRuFyEgpmJ8s5gtdkvvT0Axt+
WNaLBVcPrxUpAotUlVuVgqX+7vb/CB5N8fXuB4tHbDEUqCChx8Fih9eVwf1V
iXi+E5xi3JqgDp75etzDHOy78dg1d/A/kn2gI1hnXrX8HLhyh46FM5j39cfG
B+DoCzf3U8HDxZf7PoIbizdoEOAHp83G+cuhvkz+W6cAPuextKIHLk/f78sB
dtctFQ4A//oZpTwA81MX9pK7CKYs9cncAa+bEN5dD/b9sT+bBe5varL6Dh7g
3jinCS7NPeItVsEivM71nZiE9Yk7qnx4Lzi16NTl62Ca/WBCKFjsNk+iFVhZ
Je1aJrjhhG/1LKx39/Dvxl/g0/8pu2iBb9cU9W26B/0v2ULkJcQr+jJ93BKc
JlXL5wOWNX8qnA9+JaZSdAzie7gs2du+kkWQvqR/PgX5YXEOHT4BTuoJC1mG
/NnoO5NQAqau0RtlgZvEXMrX3If+T0QgwrmQhMSOy65Wgt3PXTjMAfmoMq2g
OQIeb8yKcIN8NfZTCRR7AOerlCq6exP2o6X2qyPgFqv1TVaQ361i5rl7qqCf
OekScxT2Q3RZiFFLNdQDSxI1OxPiMXzvxLsaeN/dnWtSYX/O21dX8j6G/NxY
N/wimYT4Wx6PGoD3tYiX8oL1Sp/Z5ILnTnMrxyeR0KWjbzb71cJ5+vnn85gE
yF/hpYbJOvhepYFj+6E+uJ1ZmdlUD/WubrNQYSzk+wK7gi14Rxzp5shJEsoZ
5E29Bx6WmOnwOgHjF2/0imxgEZqRwdI0qDf8m7ZeLgR/FFwtuxwN65sm97wf
rGWQYNwVBfs7Um2nAWYRDwWv7Lc6SkKB3zX9DoJ7xJRXEqF+xbjr/pcDDmf0
pD2PhPl2GnS8AqfYZG7nABcbE//+gcU+nn5kHEFC/wOYyuK7
      "]]}}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[4], Opacity[
     1.], AbsoluteDashing[{1, 8, 1, 8}], LineBox[CompressedData["
1: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

      "]]}}},
  AspectRatio->1,
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{265., 0},
  BaseStyle->{18, FontFamily -> "Times"},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
     "\"\\!\\(\\*SuperscriptBox[\\(d\\), \
\\(4\\)]\\)A/\\!\\(\\*SuperscriptBox[\\(d\[Lambda]\\), \\(4\\)]\\)<a.u. \
\\!\\(\\*SuperscriptBox[\\(nm\\), \\(-4\\)]\\)>\"", TraditionalForm], None}, {
     FormBox["\"\[Lambda] <nm>\"", TraditionalForm], None}},
  FrameStyle->AbsoluteThickness[2],
  FrameTicks->{{{{0, 
       FormBox["\"0\"", TraditionalForm], {0.025, 0}, {
        AbsoluteThickness[2]}}, {0.001, 
       FormBox["\"0.001\"", TraditionalForm], {0.025, 0}, {
        AbsoluteThickness[2]}}, {0.002, 
       FormBox["\"0.002\"", TraditionalForm], {0.025, 0}, {
        AbsoluteThickness[2]}}, {0.003, 
       FormBox["\"0.003\"", TraditionalForm], {0.025, 0}, {
        AbsoluteThickness[2]}}, {-0.001, 
       FormBox["\"-0.001\"", TraditionalForm], {0.025, 0}, {
        AbsoluteThickness[2]}}, {-0.002, 
       FormBox["\"-0.002\"", TraditionalForm], {0.025, 0}, {
        AbsoluteThickness[2]}}, {0.6, 
       FormBox["\"0.6\"", TraditionalForm], {0.025, 0}, {
        AbsoluteThickness[2]}}}, None}, {{{220, 
       FormBox["\"220\"", TraditionalForm], {0.025, 0}, {
        AbsoluteThickness[2]}}, {265, 
       FormBox["\"\"", TraditionalForm], {0.025, 0}, {
        AbsoluteThickness[2]}}, {275, 
       FormBox["\"\"", TraditionalForm], {0.025, 0}, {
        AbsoluteThickness[2]}}, {285, 
       FormBox["\"\"", TraditionalForm], {0.025, 0}, {
        AbsoluteThickness[2]}}, {295, 
       FormBox["\"\"", TraditionalForm], {0.025, 0}, {
        AbsoluteThickness[2]}}, {280, 
       FormBox["\"280\"", TraditionalForm], {0.025, 0}, {
        AbsoluteThickness[2]}}, {290, 
       FormBox["\"290\"", TraditionalForm], {0.025, 0}, {
        AbsoluteThickness[2]}}, {270, 
       FormBox["\"270\"", TraditionalForm], {0.025, 0}, {
        AbsoluteThickness[2]}}, {320, 
       FormBox["\"320\"", TraditionalForm], {0.025, 0}, {
        AbsoluteThickness[2]}}, {300, 
       FormBox["\"300\"", TraditionalForm], {0.025, 0}, {
        AbsoluteThickness[2]}}}, None}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->330,
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{263, 302}, {-0.0025, 0.00253}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6236609161669407`*^9, 3.623665696774721*^9, 
  3.6258263935203114`*^9, 3.626349702401126*^9}]
},
WindowToolbars->{},
CellGrouping->Manual,
WindowSize->{1123, 716},
WindowMargins->{{79, Automatic}, {Automatic, -10}},
PrintingCopies->1,
PrintingPageRange->{Automatic, Automatic},
PrivateNotebookOptions->{"VersionedStylesheet"->{"Default.nb"[8.] -> False}},
ShowCellLabel->True,
ShowCellTags->False,
FrontEndVersion->"10.0 for Linux x86 (64-bit) (June 27, 2014)",
StyleDefinitions->"Default.nb",
PrivateNotebookOptions -> {"ColorPalette" -> {RGBColor, -1}},
RenderingOptions -> {"ObjectDithering" -> True},
RenderingOptions -> {"RasterDithering" -> False}
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[545, 20, 90, 1, 31, "Input"],
Cell[638, 23, 71, 1, 31, "Input"],
Cell[712, 26, 92, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[829, 31, 263, 6, 132, "Input"],
Cell[1095, 39, 527, 11, 23, "Message"],
Cell[1625, 52, 147, 2, 31, "Output"],
Cell[1775, 56, 519, 11, 23, "Message"],
Cell[2297, 69, 149, 2, 31, "Output"],
Cell[2449, 73, 524, 11, 23, "Message"],
Cell[2976, 86, 149, 2, 31, "Output"]
}, Open  ]],
Cell[3140, 91, 2365, 70, 112, "Input"],
Cell[5508, 163, 25497, 714, 1239, "Input"],
Cell[31008, 879, 151, 4, 52, "Input"],
Cell[31162, 885, 112, 3, 52, "Input"],
Cell[31277, 890, 382, 11, 52, "Input"],
Cell[31662, 903, 228, 5, 92, "Input"],
Cell[31893, 910, 582, 17, 52, "Input"],
Cell[32478, 929, 7652, 182, 472, "Input"],
Cell[40133, 1113, 45, 0, 52, "Input"],
Cell[CellGroupData[{
Cell[40203, 1117, 105, 2, 52, "Input"],
Cell[40311, 1121, 142, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40490, 1128, 1240, 36, 112, "Input"],
Cell[41733, 1166, 261, 4, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42031, 1175, 412, 11, 92, "Input"],
Cell[42446, 1188, 167, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42650, 1195, 2335, 76, 240, "Input"],
Cell[44988, 1273, 1236, 19, 92, "Output"],
Cell[CellGroupData[{
Cell[46249, 1296, 420, 13, 70, "Input"],
Cell[46672, 1311, 2630, 80, 132, "Input"],
Cell[49305, 1393, 1903, 54, 129, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[51257, 1453, 3827, 108, 253, "Input"],
Cell[55087, 1563, 7798, 201, 89, "Output"],
Cell[62888, 1766, 1240, 20, 72, "Output"],
Cell[64131, 1788, 2414, 40, 132, "Output"],
Cell[66548, 1830, 7798, 201, 89, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74383, 2036, 63, 1, 52, "Input"],
Cell[74449, 2039, 164, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74650, 2046, 1045, 32, 126, "Input"],
Cell[75698, 2080, 102, 1, 33, "Output"],
Cell[75803, 2083, 592, 11, 23, "Message"],
Cell[76398, 2096, 190, 3, 31, "Input"],
Cell[76591, 2101, 197, 3, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76825, 2109, 1140, 39, 138, "Input"],
Cell[77968, 2150, 3574, 73, 172, "Output"],
Cell[81545, 2225, 180, 2, 31, "Output"],
Cell[81728, 2229, 202, 3, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81967, 2237, 170, 4, 52, "Input"],
Cell[82140, 2243, 6680, 120, 219, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[88857, 2368, 63, 1, 52, "Input"],
Cell[88923, 2371, 143, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89103, 2378, 103, 2, 52, "Input"],
Cell[89209, 2382, 143, 2, 31, "Output"]
}, Open  ]],
Cell[89367, 2387, 593, 19, 52, "Input"],
Cell[89963, 2408, 886, 25, 92, "Input"],
Cell[90852, 2435, 2268, 69, 92, "Input"],
Cell[CellGroupData[{
Cell[93145, 2508, 2068, 48, 138, "Input"],
Cell[95216, 2558, 19409, 330, 350, "Output"],
Cell[114628, 2890, 19455, 330, 356, "Output"],
Cell[134086, 3222, 18160, 309, 362, "Output"],
Cell[152249, 3533, 15314, 263, 368, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[167600, 3801, 69, 1, 52, "Input"],
Cell[167672, 3804, 159, 2, 31, "Output"]
}, Open  ]],
Cell[167846, 3809, 2282, 69, 132, "Input"],
Cell[CellGroupData[{
Cell[170153, 3882, 120, 3, 52, "Input"],
Cell[170276, 3887, 213, 4, 31, "Output"]
}, Open  ]],
Cell[170504, 3894, 45, 0, 52, "Input"],
Cell[170552, 3896, 26, 0, 31, "Input"],
Cell[170581, 3898, 6542, 168, 352, "Input"],
Cell[177126, 4068, 20139, 348, 303, "Output"],
Cell[197268, 4418, 6919, 165, 466, "Input"],
Cell[204190, 4585, 929, 17, 41, "Message"],
Cell[205122, 4604, 7916, 188, 505, "Input"],
Cell[213041, 4794, 1194, 21, 51, "Message"],
Cell[214238, 4817, 45, 0, 52, "Input"],
Cell[214286, 4819, 7846, 187, 546, "Input"],
Cell[222135, 5008, 936, 17, 41, "Message"],
Cell[223074, 5027, 7562, 179, 452, "Input"],
Cell[230639, 5208, 938, 17, 41, "Message"],
Cell[231580, 5227, 151, 4, 52, "Input"],
Cell[231734, 5233, 970, 18, 41, "Message"],
Cell[232707, 5253, 1034, 28, 92, "Input"],
Cell[233744, 5283, 18398, 310, 339, "Output"],
Cell[252145, 5595, 37821, 639, 303, "Output"]
}
]
*)

(* End of internal cache information *)
