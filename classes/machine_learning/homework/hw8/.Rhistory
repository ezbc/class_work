y <- dnorm(x, m=10, sd=5) + 10*dnorm(x, m=90, sd=40) + 5*dnorm(x, m=33, sd=20)
y_noisey <- y + rnorm(n, m=0, sd=sigma_list[j])
y_noisey <- y_noisey / max(y_noisey)
library(pspline)
fit <- smooth.Pspline(x, y_noisey, method=3)
plot(x, y_noisey, xlab="x", ylab="y")
lines(fit$x, fit$ysmth)
R <- 1/length(x) * sum((y_noisey - fit$ysmth)^2)
nu <- 3
m <- 1
lambda <- n*(2*3.14*nu)**(-2*m)
fit_true <- smooth.Pspline(x, y, method=1, spar=lambda)
R_true <- 1/length(x) * sum((y - fit_true$ysmth)^2)
I = R/R_true
results <- c(results, c(n_list[i], sigma_list[j], I))
}
}
}
R/R_true
n_list = c(32, 64, 128, 256, 512)
sigma_list = c(0.01, 0.1)
results = c()
for (i in 1:length(n_list)){
for (j in 1:2){
for (k in 1:20){
n <- n_list[i]
x <- seq(1, n)
y <- dnorm(x, m=10, sd=5) + 10*dnorm(x, m=90, sd=40) + 5*dnorm(x, m=33, sd=20)
y_noisey <- y + rnorm(n, m=0, sd=sigma_list[j])
y_noisey <- y_noisey / max(y_noisey)
library(pspline)
fit <- smooth.Pspline(x, y_noisey, method=3)
plot(x, y_noisey, xlab="x", ylab="y")
lines(fit$x, fit$ysmth)
R <- 1/length(x) * sum((y_noisey - fit$ysmth)^2)
nu <- 3
m <- 1
lambda <- n*(2*3.14*nu)**(-2*m)
fit_true <- smooth.Pspline(x, y, method=1, spar=lambda)
R_true <- 1/length(x) * sum((y - fit_true$ysmth)^2)
I = R/R_true
results <- c(results, c(n_list[i], sigma_list[j], I))
}
}
}
R/R_true
n_list = c(32, 64, 128, 256, 512)
sigma_list = c(0.01, 0.1)
results = c()
for (i in 1:length(n_list)){
for (j in 1:2){
for (k in 1:20){
n <- n_list[i]
x <- seq(1, n)
y <- dnorm(x, m=n/10, sd=n/5) + 10*dnorm(x, m=n/90, sd=n/40) + 5*dnorm(x, m=n/33, sd=n/20)
y_noisey <- y + rnorm(n, m=0, sd=sigma_list[j])
y_noisey <- y_noisey / max(y_noisey)
library(pspline)
fit <- smooth.Pspline(x, y_noisey, method=3)
plot(x, y_noisey, xlab="x", ylab="y")
lines(fit$x, fit$ysmth)
R <- 1/length(x) * sum((y_noisey - fit$ysmth)^2)
nu <- 3
m <- 1
lambda <- n*(2*3.14*nu)**(-2*m)
fit_true <- smooth.Pspline(x, y, method=1, spar=lambda)
R_true <- 1/length(x) * sum((y - fit_true$ysmth)^2)
I = R/R_true
results <- c(results, c(n_list[i], sigma_list[j], I))
}
}
}
R/R_true
n_list = c(32, 64, 128, 256, 512)
sigma_list = c(0.01, 0.1)
results = c()
for (i in 1:length(n_list)){
for (j in 1:2){
for (k in 1:20){
n <- n_list[i]
x <- seq(1, n)
y <- dnorm(x, m=n/10, sd=n/5) + 10*dnorm(x, m=n/90, sd=n/40) + 5*dnorm(x, m=n/33, sd=n/20)
y_noisey <- y + rnorm(n, m=0, sd=sigma_list[j])
y_noisey <- y_noisey / max(y_noisey)
library(pspline)
fit <- smooth.Pspline(x, y_noisey, method=3)
plot(x, y_noisey, xlab="x", ylab="y")
lines(fit$x, fit$ysmth)
R <- 1/length(x) * sum((y_noisey - fit$ysmth)^2)
nu <- 3
m <- 1
lambda <- n*(2*3.14*nu)**(-2*m)
fit_true <- smooth.Pspline(x, y, method=1, spar=lambda)
R_true <- 1/length(x) * sum((y - fit_true$ysmth)^2)
I = R/R_true
results <- c(results, c(n_list[i], sigma_list[j], I))
}
}
}
R/R_true
n_list = c(32, 64, 128, 256, 512)
sigma_list = c(0.01, 0.1)
results = c()
for (i in 1:length(n_list)){
for (j in 1:2){
for (k in 1:20){
n <- n_list[i]
x <- seq(1, n)
y <- dnorm(x, m=n*100/10, sd=n*100/5) + 10*dnorm(x, m=n*100/90, sd=n*100/40) + 5*dnorm(x, m=n*100/33, sd=n*100/20)
y_noisey <- y + rnorm(n, m=0, sd=sigma_list[j])
y_noisey <- y_noisey / max(y_noisey)
library(pspline)
fit <- smooth.Pspline(x, y_noisey, method=3)
plot(x, y_noisey, xlab="x", ylab="y")
lines(fit$x, fit$ysmth)
R <- 1/length(x) * sum((y_noisey - fit$ysmth)^2)
nu <- 3
m <- 1
lambda <- n*(2*3.14*nu)**(-2*m)
fit_true <- smooth.Pspline(x, y, method=1, spar=lambda)
R_true <- 1/length(x) * sum((y - fit_true$ysmth)^2)
I = R/R_true
results <- c(results, c(n_list[i], sigma_list[j], I))
}
}
}
R/R_true
y <- dnorm(x, m=n*100/10, sd=n*100/5) + 10*dnorm(x, m=n*100/90, sd=n*100/40) + 5*dnorm(x, m=n*100/33, sd=n*100/20)
n_list = c(32, 64, 128, 256, 512)
sigma_list = c(0.01, 0.1)
results = c()
for (i in 1:length(n_list)){
for (j in 1:2){
for (k in 1:20){
n <- n_list[i]
x <- seq(1, n)
y <- dnorm(x, m=n/10, sd=n/5) + 10*dnorm(x, m=n/90, sd=n/40) + 5*dnorm(x, m=n/33, sd=n/20)
y_noisey <- y + rnorm(n, m=0, sd=sigma_list[j])
y_noisey <- y_noisey / max(y_noisey)
library(pspline)
fit <- smooth.Pspline(x, y_noisey, method=3)
plot(x, y_noisey, xlab="x", ylab="y")
lines(fit$x, fit$ysmth)
R <- 1/length(x) * sum((y_noisey - fit$ysmth)^2)
nu <- 3
m <- 1
lambda <- n*(2*3.14*nu)**(-2*m)
fit_true <- smooth.Pspline(x, y, method=1, spar=lambda)
R_true <- 1/length(x) * sum((y - fit_true$ysmth)^2)
I = R/R_true
results <- c(results, c(n_list[i], sigma_list[j], I))
}
}
}
R/R_true
y <- dnorm(x, m=10, sd=n/5) + 10*dnorm(x, m=90, sd=40) + 5*dnorm(x, m=33, sd=20)
n_list = c(32, 64, 128, 256, 512)
sigma_list = c(0.01, 0.1)
results = c()
for (i in 1:length(n_list)){
for (j in 1:2){
for (k in 1:20){
n <- n_list[i]
x <- seq(1, n)
y <- dnorm(x, m=10, sd=5) + 10*dnorm(x, m=90, sd=40) + 5*dnorm(x, m=33, sd=20)
y_noisey <- y + rnorm(n, m=0, sd=sigma_list[j])
y_noisey <- y_noisey / max(y_noisey)
library(pspline)
fit <- smooth.Pspline(x, y_noisey, method=3)
plot(x, y_noisey, xlab="x", ylab="y")
lines(fit$x, fit$ysmth)
R <- 1/length(x) * sum((y_noisey - fit$ysmth)^2)
nu <- 3
m <- 1
lambda <- n*(2*3.14*nu)**(-2*m)
fit_true <- smooth.Pspline(x, y, method=1, spar=lambda)
R_true <- 1/length(x) * sum((y - fit_true$ysmth)^2)
I = R/R_true
results <- c(results, c(n_list[i], sigma_list[j], I))
}
}
}
R/R_true
n_list = c(32, 64, 128, 256, 512)
sigma_list = c(0.01, 0.1)
results = c()
for (i in 1:length(n_list)){
for (j in 1:2){
for (k in 1:20){
n <- n_list[i]
x <- seq(1, n)
y <- dnorm(x, m=10, sd=5) + 10*dnorm(x, m=90, sd=40) + 5*dnorm(x, m=33, sd=20)
y_noisey <- y + rnorm(n, m=0, sd=sigma_list[j])
y_noisey <- y_noisey / max(y_noisey)
library(pspline)
fit <- smooth.Pspline(x, y_noisey, method=3)
plot(x, y_noisey, xlab="x", ylab="y")
lines(fit$x, fit$ysmth)
R <- 1/length(x) * sum((y_noisey - fit$ysmth)^2)
nu <- 3
m <- 1
lambda <- n*(2*3.14*nu)**(-2*m)
fit_true <- smooth.Pspline(x, y, method=1, spar=lambda)
R_true <- 1/length(x) * sum((y - fit_true$ysmth)^2)
I = R/R_true
results <- c(results, c(n_list[i], sigma_list[j], I))
}
}
}
R/R_true
n_list = c(32, 64, 128, 256, 512)
sigma_list = c(0.01, 0.1)
results = c()
for (i in 1:length(n_list)){
for (j in 1:2){
for (k in 1:20){
n <- n_list[i]
x <- seq(1, n)
y <- dnorm(x, m=10, sd=5) + 10*dnorm(x, m=90, sd=40) + 5*dnorm(x, m=33, sd=20)
y_noisey <- y + rnorm(n, m=0, sd=sigma_list[j])
y_noisey <- y_noisey / max(y_noisey)
library(pspline)
fit <- smooth.Pspline(x, y_noisey, method=3)
plot(x, y_noisey, xlab="x", ylab="y")
lines(fit$x, fit$ysmth)
R <- 1/length(x) * sum((y_noisey - fit$ysmth)^2)
nu <- 3
m <- 1
lambda <- n*(2*3.14*nu)**(-2*m)
fit_true <- smooth.Pspline(x, y, method=1, spar=lambda)
R_true <- 1/length(x) * sum((y - fit_true$ysmth)^2)
I = R/R_true
results <- c(results, c(n_list[i], sigma_list[j], I))
}
}
}
R/R_true
n_list = c(32, 64, 128, 256, 512)
sigma_list = c(0.01, 0.1)
results = c()
for (i in 1:length(n_list)){
for (j in 1:2){
for (k in 1:20){
n <- n_list[i]
x <- seq(1, n)
y <- dnorm(x, m=10, sd=5) + 10*dnorm(x, m=90, sd=40) + 5*dnorm(x, m=33, sd=20)
y_noisey <- y + rnorm(n, m=0, sd=sigma_list[j])
y_noisey <- y_noisey / max(y_noisey)
library(pspline)
fit <- smooth.Pspline(x, y_noisey, method=3)
plot(x, y_noisey, xlab="x", ylab="y")
lines(fit$x, fit$ysmth)
R <- 1/length(x) * sum((y_noisey - fit$ysmth)^2)
nu <- 3
m <- 1
lambda <- n*(2*3.14*nu)**(-2*m)
fit_true <- smooth.Pspline(x, y, method=1, spar=lambda)
R_true <- 1/length(x) * sum((y - fit_true$ysmth)^2)
I = R/R_true
results <- c(results, c(n_list[i], sigma_list[j], I))
}
}
}
R/R_true
n_list = c(32, 64, 128, 256, 512)
sigma_list = c(0.01, 0.1)
results = c()
for (i in 1:length(n_list)){
for (j in 1:2){
for (k in 1:20){
n <- n_list[i]
x <- seq(1, 100, length=n)
y <- dnorm(x, m=10, sd=5) + 10*dnorm(x, m=90, sd=40) + 5*dnorm(x, m=33, sd=20)
y_noisey <- y + rnorm(n, m=0, sd=sigma_list[j])
y_noisey <- y_noisey / max(y_noisey)
library(pspline)
fit <- smooth.Pspline(x, y_noisey, method=3)
plot(x, y_noisey, xlab="x", ylab="y")
lines(fit$x, fit$ysmth)
R <- 1/length(x) * sum((y_noisey - fit$ysmth)^2)
nu <- 3
m <- 1
lambda <- n*(2*3.14*nu)**(-2*m)
fit_true <- smooth.Pspline(x, y, method=1, spar=lambda)
R_true <- 1/length(x) * sum((y - fit_true$ysmth)^2)
I = R/R_true
results <- c(results, c(n_list[i], sigma_list[j], I))
}
}
}
R/R_true
n_list = c(32, 64, 128, 256, 512)
sigma_list = c(0.01, 0.1)
results = c()
for (i in 1:length(n_list)){
for (j in 1:2){
for (k in 1:20){
n <- n_list[i]
x <- seq(1, 100, length=n)
y <- dnorm(x, m=10, sd=5) + 10*dnorm(x, m=90, sd=40) + 5*dnorm(x, m=33, sd=20)
y_noisey <- y + rnorm(n, m=0, sd=sigma_list[j])
y_noisey <- y_noisey / max(y_noisey)
library(pspline)
fit <- smooth.Pspline(x, y_noisey, method=3)
plot(x, y_noisey, xlab="x", ylab="y")
lines(fit$x, fit$ysmth)
R <- 1/length(x) * sum((y_noisey - fit$ysmth)^2)
nu <- 3
m <- 1
lambda <- n*(2*3.14*nu)**(-2*m)
fit_true <- smooth.Pspline(x, y, method=1, spar=lambda)
R_true <- 1/length(x) * sum((y - fit_true$ysmth)^2)
I = R/R_true
results <- c(results, c(n_list[i], sigma_list[j], I))
}
}
}
R/R_true
n_list = c(32, 64, 128, 256, 512)
sigma_list = c(0.01, 0.1)
results = c()
for (i in 1:length(n_list)){
for (j in 1:2){
for (k in 1:20){
n <- n_list[i]
x <- seq(1, 100, length=n)
y <- dnorm(x, m=10, sd=5) + 10*dnorm(x, m=90, sd=40) + 5*dnorm(x, m=33, sd=20)
y_noisey <- y + rnorm(n, m=0, sd=sigma_list[j])
y_noisey <- y_noisey / max(y_noisey)
library(pspline)
fit <- smooth.Pspline(x, y_noisey, method=3)
plot(x, y_noisey, xlab="x", ylab="y")
lines(fit$x, fit$ysmth)
R <- 1/length(x) * sum((y_noisey - fit$ysmth)^2)
nu <- 3
m <- 1
lambda <- n*(2*3.14*nu)**(-2*m)
fit_true <- smooth.Pspline(x, y, method=1, spar=lambda)
R_true <- 1/length(x) * sum((y - fit_true$ysmth)^2)
I = R/R_true
results <- c(results, c(n_list[i], sigma_list[j], I))
}
}
}
R/R_true
for (i in 1:length(n_list)){
n_list = c(32, 64, 128, 256, 512)
sigma_list = c(0.1, 0.01)
results = c()
for (i in 1:length(n_list)){
for (j in 1:2){
for (k in 1:20){
n <- n_list[i]
x <- seq(1, 100, length=n)
y <- dnorm(x, m=10, sd=5) + 10*dnorm(x, m=90, sd=40) + 5*dnorm(x, m=33, sd=20)
y_noisey <- y + rnorm(n, m=0, sd=sigma_list[j])
y_noisey <- y_noisey / max(y_noisey)
library(pspline)
fit <- smooth.Pspline(x, y_noisey, method=3)
plot(x, y_noisey, xlab="x", ylab="y")
lines(fit$x, fit$ysmth)
R <- 1/length(x) * sum((y_noisey - fit$ysmth)^2)
nu <- 3
m <- 1
lambda <- n*(2*3.14*nu)**(-2*m)
fit_true <- smooth.Pspline(x, y, method=1, spar=lambda)
R_true <- 1/length(x) * sum((y - fit_true$ysmth)^2)
I = R/R_true
results <- c(results, c(n_list[i], sigma_list[j], I))
}
}
}
R/R_true
n_list = c(32, 64, 128, 256, 512)
sigma_list = c(0.1, 0.01)
results = c()
for (i in 1:length(n_list)){
for (j in 1:2){
for (k in 1:20){
n <- n_list[i]
x <- seq(1, 100, length=n)
y <- dnorm(x, m=10, sd=5) + 10*dnorm(x, m=90, sd=40) + 5*dnorm(x, m=33, sd=20)
y_noisey <- y + rnorm(n, m=0, sd=sigma_list[j])
y_noisey <- y_noisey / max(y_noisey)
library(pspline)
fit <- smooth.Pspline(x, y_noisey, method=3)
plot(x, y_noisey, xlab="x", ylab="y")
lines(fit$x, fit$ysmth)
R <- 1/length(x) * sum((y_noisey - fit$ysmth)^2)
nu <- 3
m <- 1
lambda <- n*(2*3.14*nu)**(-2*m)
fit_true <- smooth.Pspline(x, y, method=1, spar=lambda)
R_true <- 1/length(x) * sum((y - fit_true$ysmth)^2)
I = R/R_true
results <- c(results, c(n_list[i], sigma_list[j], I))
}
}
}
R/R_true
n_list = c(32, 64, 128, 256, 512)
sigma_list = c(0.1, 0.01)
results = c()
for (i in 1:length(n_list)){
for (j in 1:2){
for (k in 1:20){
n <- n_list[i]
x <- seq(1, 100, length=n)
y <- dnorm(x, m=10, sd=5) + 10*dnorm(x, m=90, sd=40) + 5*dnorm(x, m=33, sd=20)
y_noisey <- y + rnorm(n, m=0, sd=sigma_list[j])
y_noisey <- y_noisey / max(y_noisey)
library(pspline)
fit <- smooth.Pspline(x, y_noisey, method=3)
plot(x, y_noisey, xlab="x", ylab="y")
lines(fit$x, fit$ysmth)
R <- 1/length(x) * sum((y_noisey - fit$ysmth)^2)
nu <- 3
m <- 1
lambda <- n*(2*3.14*nu)**(-2*m)
fit_true <- smooth.Pspline(x, y, method=1, spar=lambda)
R_true <- 1/length(x) * sum((y - fit_true$ysmth)^2)
I = R/R_true
results <- c(results, c(n_list[i], sigma_list[j], I))
}
}
}
R/R_true
n_list = c(32, 64, 128, 256, 512)
sigma_list = c(0.1, 0.01)
results = c()
for (i in 1:length(n_list)){
for (j in 1:2){
for (k in 1:20){
n <- n_list[i]
x <- seq(1, 100, length=n)
y <- dnorm(x, m=10, sd=5) + 10*dnorm(x, m=90, sd=40) + 5*dnorm(x, m=33, sd=20)
y_noisey <- y + rnorm(n, m=0, sd=sigma_list[j])
y_noisey <- y_noisey / max(y_noisey)
library(pspline)
fit <- smooth.Pspline(x, y_noisey, method=3)
plot(x, y_noisey, xlab="x", ylab="y")
lines(fit$x, fit$ysmth)
R <- 1/length(x) * sum((y_noisey - fit$ysmth)^2)
nu <- 3
m <- 1
lambda <- n*(2*3.14*nu)**(-2*m)
fit_true <- smooth.Pspline(x, y, method=1, spar=lambda)
R_true <- 1/length(x) * sum((y - fit_true$ysmth)^2)
I = R/R_true
results <- c(results, c(n_list[i], sigma_list[j], I))
}
}
}
R/R_true
n_list = c(32, 64, 128, 256, 512)
sigma_list = c(0.1, 0.01)
results = c()
for (i in 1:length(n_list)){
n <- n_list[i]
x <- seq(1, 100, length=n)
y <- dnorm(x, m=10, sd=5) + 10*dnorm(x, m=90, sd=40) + 5*dnorm(x, m=33, sd=20)
for (j in 1:2){
for (k in 1:20){
y_noisey <- y + rnorm(n, m=0, sd=sigma_list[j])
y_noisey <- y_noisey / max(y_noisey)
library(pspline)
fit <- smooth.Pspline(x, y_noisey, method=3)
plot(x, y_noisey, xlab="x", ylab="y")
lines(fit$x, fit$ysmth)
R <- 1/length(x) * sum((y_noisey - fit$ysmth)^2)
nu <- 3
m <- 1
lambda <- n*(2*3.14*nu)**(-2*m)
fit_true <- smooth.Pspline(x, y, method=1, spar=lambda)
R_true <- 1/length(x) * sum((y - fit_true$ysmth)^2)
I = R/R_true
results <- c(results, c(n_list[i], sigma_list[j], I))
}
}
}
R/R_true
n_list = c(32, 64, 128, 256, 512)
sigma_list = c(0.1, 0.01)
results = c()
for (i in 1:length(n_list)){
n <- n_list[i]
x <- seq(1, 100, length=n)
y <- dnorm(x, m=10, sd=1) + 10*dnorm(x, m=90, sd=40) + 5*dnorm(x, m=33, sd=20)
for (j in 1:2){
for (k in 1:20){
y_noisey <- y + rnorm(n, m=0, sd=sigma_list[j])
y_noisey <- y_noisey / max(y_noisey)
library(pspline)
fit <- smooth.Pspline(x, y_noisey, method=3)
plot(x, y_noisey, xlab="x", ylab="y")
lines(fit$x, fit$ysmth)
R <- 1/length(x) * sum((y_noisey - fit$ysmth)^2)
nu <- 3
m <- 1
lambda <- n*(2*3.14*nu)**(-2*m)
fit_true <- smooth.Pspline(x, y, method=1, spar=lambda)
R_true <- 1/length(x) * sum((y - fit_true$ysmth)^2)
I = R/R_true
results <- c(results, c(n_list[i], sigma_list[j], I))
}
}
}
R/R_true
x
asdf
x<-1
x?
